<?xml version="1.0" encoding="UTF-8"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Deniz G</title>
    <description>Bilingual Blog: Turkish and English on Software and Life.</description>
    <link>http://localhost:4000/</link>
    <atom:link href="http://localhost:4000/feed.xml" rel="self" type="application/rss+xml" />
    <pubDate>Fri, 22 Dec 2023 17:07:27 +0300</pubDate>
    <lastBuildDate>Fri, 22 Dec 2023 17:07:27 +0300</lastBuildDate>
    <generator>Jekyll v3.9.3</generator>
    
      <item>
        <title>Mısır Seyahatnamesi [TR]</title>
        <description>&lt;p&gt;Temmuz ayında arkadaşımla 3 gün Sharm El Sheikh, 3 gün Kahire olarak planladığımız Mısır tatilinin kısa bir özeti…&lt;/p&gt;
&lt;h2&gt;Sharm El Sheikh&lt;/h2&gt;

&lt;p&gt;Sharm El Sheikh, Sina yarımadasında en güneyde bulunan ve Kızıldenize kıyısı olan Mısır’daki turistik bölge. 
Türkiyede her yıl en fazla turistin geldiği ülke Rusya. Bu sene ise öyle değil. İlk defa Alman turist sayısı, Rus turist sayısını aşmış. 
Rusların artık tercih ettiği bölge ise, daha ucuz olması nedeniyle Sharm El Sheikh.
Burası, aklınızda nasıl bir Mısır ya da Arap ülkesi imajı varsa, düşündüğünüz gibi bir yer değil. 
Bölge tamamen çöl, denize kıyısı olan yerlere ise lüks oteller inşa edilmiş (Mısır halkı için lüks kalıyor) ve tamamen uluslararası bir nüfusu var. 
Sadece otellerde ve işyerlerinde çalışan kişiler Mısırlı. Otellerde Mısırlı sayısı ise %1-2’yi geçmez.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/sina.jpeg&quot; alt=&quot;sina&quot; title=&quot;sina&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Uluslarası bir havalimanı var ve İstanbul’dan direkt uçuşla 3 saatte buraya gelinebiliyor. 
Mısıra kapıda vize uygulaması var, 25 dolar karşılığı havalimanı kontrolünde vize alınıyor.
Havalimanından, otellerin olduğu bölge ise 10-15 km. 
Toplu ulaşım yok, sadece taksilerle yada booking.com’dan otellerin anlaşmalı servisleriyle ulaşım sağlanıyor. Uber yok. 
Taksiciler, müşterilerin yabancı olduğundan dolayı çok yüksek fiyat söylüyorlar. Pazarlık yaparak km başı 1 dolara anlaşabilirsiniz. 
Bize 12 km mesafe olan yere en az 15 dolar fiyat söylediler. Bir taksiciyle 10 dolar karşılığı anlaştık.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/vize.jpeg&quot; alt=&quot;vize&quot; title=&quot;vize&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Gittiğimiz otel, denize sıfır, 5 yıldızlı herşey dahil ve devasa büyüklüğü olan bir oteldi. 3 gece için 16 bin tl ödeme yaptık. 
Bir arkadaşımla gittiğim için kişi başı 8 bin tl’ye geldi. Şimdi Rus turistlerin neden Türkiye’nin Akdeniz bölgesi yerine burayı tercih ettiğini anlamışsınızdır. 
Hizmet açısından ise gayet müşteri yanlısı bir tutumları vardı. Sabah 5:30’da Sharm El Sheikh’e iniş yaptık, otele vardığımızda saat 6:30’du. 
Bize odamızı saat 8’de verdiler. Halbuki giriş saati öğlen 2 olmalıydı. Çıkışı ise, 12’de yaptık fakat uçağımız 5’te olduğu için yine otelde kaldık ve 
tüm hizmetlerinden faydalanmaya devam ettik.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/otel.jpeg&quot; alt=&quot;otel&quot; title=&quot;otel&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kızıldeniz’de Dalış&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Sharm El Sheikh’in batısında Kızıldenizde Ras Muhammed National Park diye bir bölge var. Burada, dalış yapılıyor ve arkadaşımın dediğine göre dalış yapmak için iyi bir yer. Kendisi, üniversitede dalış kulübündeymiş ve dalış için Akdenizde bir bölgeye gitmişler. Dalış yaptıkları yerde hiçbir şey yokmuş ve ortamı cazip kılmak için denizin altına tank koymuşlar. Dalış yapıp ona bakıyormuşsun. Burada ise durum tam tersi. Balık açısından çok büyük çeşitlilik var. Dalış yaklaşık 20 dk sürüyor ve bir sürü şey görme fırsatın oluyor.&lt;/p&gt;

&lt;video autoplay=&quot;autoplay&quot; loop=&quot;loop&quot; width=&quot;100%&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;/images/posts/misir/dalis.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;Peki dalış nasıl bulunuyor ve oraya nasıl gidiliyor? Hoteldeki ilk günümüzde bizim de kafamızda soru işaretiydi ve akşam barda birisiyle tanıştık. Kendisi daha o günün sabahı ailesiyle dalışa gitmiş. GetYourGuide uygulamasında, konum bilgisi girince, orada yapılacak turistik faaliyetler ve bunları sağlayan şirketler çıkıyor. Orada istediğin zamanı seçip konumunu veriyorsun ve ödeme yapıyorsun. O gün seni hotelden alıyorlar ve dalışa götürüyorlar. 
Bizim kaldığımız hotelde böyle hizmet veren bir şirketin standı vardı. Oradan kayıt olduk.
Dalış dediğime bakmayın, sadece dalış yok. Tüm gün, neredeyse 12 saat süren kızıldenizde tekne/yat turu. Dalışa gidiyorsun, yüzüyorsun ve teknede vakit geçiriyorsun. Fiyatı ise 25-35$ arası.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/tekne.jpeg&quot; alt=&quot;tekne&quot; title=&quot;tekne&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ayrıca, Kızıldenizde kıyıdan birkaç kilometre uzakta, White Island isminde bir adacık var. Oraya da uğranılıyor ve genelde herkes orada fotoğraf çekiniyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/whiteisland.jpeg&quot; alt=&quot;whiteisland&quot; title=&quot;whiteisland&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hard Rock Cafe&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Hard Rock Cafe, içerisinde restoran, bar ve kendi ürünlerini sattıkları mağaza bölümünden oluşan dünya çapındaa bir kafe. 30’dan fazla ülkede 100’den fazla şubesi varmış. Çoğu zaman insanların t-shirt ve sweatshirtlerinde Hard Rock Cafe - Berlin resimlerini görürdüm ve oraya özgü bir yer sanırdım. Bunu da ilk Londra’da Hard Rock Cafe görünce, neymiş bu ya diye araştırınca öğrenmiş oldum. Londra’da gitmiş ve t-shirtini almıştım. Burada da olduğunu görünce, buraya da gideyim ve t-shirt alayım dedim. Kendimce, her gittiğim ülkeden birer t-shirtini alır ve koleksiyon oluştururum dedim. 
Buraya gelmeden önce, buranın aynı zamanda Rock için tarihi öğeler barındıran bir müze olduğunu duymuştum. Londradaki kafe ne kadar kalabalıksa, burası da bir o kadar boştu ve müze bölümü yoktu. Çünkü, Sharm El Sheikh’te 2 tane Hard Rock Cafe varmış ve bizim gittiğimiz yeni açılmış. Diğeri ise daha eski 25 yıllık kafeymiş.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/hardrockcafe.jpeg&quot; alt=&quot;hardrockcafe&quot; title=&quot;hardrockcafe&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Kahire&lt;/h2&gt;

&lt;p&gt;Sharm El Sheikh’ten uçakla 1 saat yolculuk ederek kahireye ulaşım sağladık. Hoteli de piramitlerin yanında ayarlamıştık. Havalimanı ile hotel arası da yaklaşık 30 40 km’ydi. Sharm El Sheikh’de Uber olmamasından dolayı, Uber’in genel olarak Mısır’da olmadığını düşünerek büyük bir hata yaptık ve bize 50$ dolar fiyat çeken taksiciler yerine toplu ulaşımla gidelim dedik. Toplu ulaşımla 2 vasıta değiştirerek 15 Mısır Poundu (yaklaşık 0.5$ dolar, yanlış okumadınız sadece 50 cent) ile hotele gittik. Eğer Uber kullansaydık sadece 250 Mısır Pounduna (8$) gidecektik. Para açısından 7.5$ kar etmiş olabiliriz ama o yolculuk sırasında yaşadığımız korkuyu ve dehşeti bilmiyorsunuz. Sharm El Sheikh’i anlatırken, aklınızda nasıl bir Mısır ya da Arap ülkesi imajı varsa öyle değil demiştim. İşte o imaj burası. Sokaklar kir toprak içinde, kalabalık, yürümek isteseniz bile tozdan nefes alamıyorsunuz, evler renksiz, tek tip toprak renginde. Kısacası ülke ve insanlar fakir ve sonuçları da bu.&lt;/p&gt;

&lt;p&gt;Hotelimiz, piramitlerin hemen yanında 3 yıldızlı bir yerdi ve 3 gün için 8 bin tl ödeme yaptık, yani kişi başı 4 bin tl’ye bu deneyimi yaşadık. Piramitlerin yanında kalabileceğiniz en iyi yer burası. 5 yıldızlı ve tanınmış hoteller daha çok Nil nehrinin oralarda konumlanmış durumda.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/otelp1.jpeg&quot; alt=&quot;otelp1&quot; title=&quot;piramit otel 1&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/misir/otelp2.jpeg&quot; alt=&quot;otelp2&quot; title=&quot;piramit otel 2&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Gize Piramitleri&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Antik Mısır’ın inşa ettiği 100’den fazla piramit var, fakat dünyanın 7 harikasından biri olan Keops Piramidi, Kahiredeki Gize bölgesine inşa edilmiş Gize Piramitlerinden büyük olanıdır.&lt;/p&gt;

&lt;p&gt;Antik Mısır deyince ne anlıyorum? Öncelikle tarih bilgimizi pekiştireyim. Yazılı insanlık tarihi, mö 3200’de sümerlilerin çivi yazısıyla yazıyı icat etmesiyle başlıyor ve günümüze kadar 4 farklı döneme ayrılıyor.
İlk çağ, kavimler göçüyle Batı imparatorluğu yıkılana kadar devam ediyor yani mö3200-ms450. Sonra istanbulun fethine kadar orta çağ yani 450-1453, daha sonra fransız ihtilaline kadar yeni çağ yani 1453-1789, sonrası ise yakın çağ.
Burada ilk çağ kısmı Antik çağ olarak da adlandırılıyor ve bu dönemde kurulmuş medeniyetlere de Antik medeniyetler deniyor. Yani Antik Yunanlar, Antik Mısırlılar, Antik Türkler gibi.
Antik Mısırlılar, mö3150-mö30 arasında yaşamız ilk çağ uygarlığı. Daha sonra Roma İmparatorluğu ele geçiriyor ve eyaleti haline geliyor. Ms7’de de araplar egemen olmaya başlıyor.&lt;/p&gt;

&lt;p&gt;Peki Antik Mısır neden bu kadar önemli? Nil nehri yanındaki verimli topaklarda (kuzey afrikada sıcak ve kurak iklimde yaşanılabilir bir yer), insanlar yerleşik hayata geçiyor ve tarımla uğraşıyorlar. Nehirdeki taşma olaylarından sonra, arazi sınırlarını tekrar saptayabilmek için tapu kadastro sistemini geliştiriyorlar. İlk gemiyi inşa ediyorlar. İnşaat teknikleri, sulama ve tarım teknikleri geliştiriyorlar. 
Sulama sistemlerinin inşası için matematik ve geometri geliştiriyorlar. Nil nehrindeki taşkınlara göre mevsimleri çıkarıyorlar (taşkın, ekim, hasat mevsimleri). Gökyüzünü izliyorlar, güneşe dayalı yön tayini yapıyorlar (nasıl yapıldıgını anlat), bugun kullanılan güneşe dayalı takvim hazırlıyorlar. Bir yılın 365 gündeki fazlalık 5 günü bayram ilan etmişler. Antik mısırdaki gelişmeler, insanlık tarihi açısında önemli olmuş ve önemi de buradan geliyor.&lt;/p&gt;

&lt;p&gt;Antik Mısırda 190 kral hüküm sürmüş ve her bir krala da firavun denmiş.
Firavun, Antik Mısırda ülkenin mutlak hükümdarı. Tüm kaynakların ve toprakların hakimi. Tanrının oğlu kabul edilir ve dolayısıyla kendi de tanrıdır, tanrının yeryüzündeki yansımasıdır.&lt;/p&gt;

&lt;p&gt;Peki piramit mevzusu ne?
Tarımla uğraştıkları için, ekinlerin kuruduktan sonra tekrar yeşerdiğini görüyorlar ve insanların da öldükten
sonra yaşamına devam edeceğini düşüncesini geliştiriyorlar. Bunun için de öbür dünyaya geçise önem veriyorlar
ve firavunların mumyanlanmasını geliştiriyorlar (Anubis kısmında bundan bahsedeceğim). Mumyalayarak, ruhlarının vücutlarında sonsuza kadar yaşayacağına inanıyorlar. Firavunlar için görkemli mezarlar yani piramitler yapıyorlar. Öldükten sonraki hayatında dirilince kullanması için, özel eşyalarıyla birlikte piramit içindeki lahite konuyorlar.
Piramitler, tüm antik mısır medeniyeti boyunca inşa edilmiyor. Antik mısır, old, middle ve new kingdom diye kendi içinde 3’e ayrılıyor. Old ve middle kingdomda piramitler inşa edilirken, new kingdom döneminde tercihen dağa tüneller açılıyor, tapınaklar oluşturuluyor.&lt;/p&gt;

&lt;p&gt;Dünyanın 7 harikasından birisi keops piramididir. Mö2500’de yapıldığı varsayılmaktadır. Yapımı yaklaşık 20 yıl sürmüş (hesaplama şu. piramit, her biri birkaç ton olan 2 milyon taş bloktan yapılmış. her gün 800 ton yerleştirilebileceği varsayılarak 20 yıl sonucuna ulaşılmış). Bu piramit, 150 m yüksekliğiyle 3800 yıl, dünyanın en yüksek yapısı kalmış. Bir ilginç bilgi daha. Bu piramitin yapımında kullanılan 2 milyon taş blok yan yana konsa, tüm fransayı çevreleyen 3 metrelik bir duvar yapılabilirmiş. Taş blokların piramitlere nasıl yerleştirildiği bilinmiyor ama en mantıklı düşünce, kat kat yukarı çıkmalaarı ve katlar arasında rampa kurmaları. En tepeye ulaşınca da rampaları kapatmaları.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/piramit1.jpeg&quot; alt=&quot;piramit1&quot; title=&quot;piramit 1&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bu arada, piramitler mısıra özgü bir yapı değil. Güney amerika da maya ve azteklerin yaptığı piramitler de var.&lt;/p&gt;

&lt;p&gt;Gizede yan yana 3 büyük piramit var. İlki Keops, yanındaki kefren, onun yanındaki de mikerinos. Bunlar keops’un oğlu ve torunu oluyor. Bu piramitlerin de yanında 6 küçük piramit var. Yani o alanda toplam 9 piramit bulunuyor. Küçük piramitler de, firavunun eşleri için oluyor ve her piramitte yalnızca bir kişi oluyor. Biz gittiğimizde ortadaki kefren piramidi restorasyon nedeniyle kapalıydı, 1 ve 3. açıktı. 3. piramidin içine girdik.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/piramit2.jpeg&quot; alt=&quot;piramit2&quot; title=&quot;piramit 2&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/misir/piramit3.jpeg&quot; alt=&quot;piramit3&quot; title=&quot;piramit 3&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/misir/piramit4.jpeg&quot; alt=&quot;piramit4&quot; title=&quot;piramit 4&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Benim buraya gelmeden önceki bir yanılgım da, piramitin köleler tarafından inşa edilmiş olmasıydı. Hatta gitmeden önce okuduğum yazıların bazılarında, kölelerin piramitler yapıldıktan sonra sırlarını açığa çıkarmamaları için öldürülmeleriydi. Rehber, böyle bireyin olmadığını, çalışanların da köle değil normal işçiler olduğunu söyledi.
İşçilere dair ufak başka bir bilgi daha ekleyeyim. İnşaatlarda ve maden işlerinde çalışması için asyadan göçmen işçiler getiriliyor, bu göçmen topluluğuna hiksoslar diyorlar. Ekonomi bozulunca, bunlar önce bulunduğu bölgeyi, daha sonra mısırı ele geçiriyor. Antik Mısırda ilk defa yerli olmayan bir halk iktidar oluyor. Hikaye bir yerden tanıdık geldi değil mi?&lt;/p&gt;

&lt;p&gt;Gize piramitlerinin girişinde sfenks var. Kefren piramitini yaptıran kral, piramit yapımı tamamlanınca arta kalan taşlardan rahatsız oluyor ve onlarla, girişteki bu sfenksi yaptırıyor. Sfenksin başı, kralın eşi, gövdesi de aslan.&lt;/p&gt;

&lt;p&gt;Kaldığımız hotel, hemen piramitlerin girişindeydi. Hotelin tam önünde açık hava sineması vardı ve antik mısıra dair her gün aksamları farklı dillerde film yayınlıyorlardı.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/piramit6.jpeg&quot; alt=&quot;piramit6&quot; title=&quot;piramit 6&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Bu arada, piramitlerin bulunduğu bölgenin turistik, haliyle gelişmiş bir yer olduğunu düşünürsünüz değil mi? Kesinlikle öyle değil. Piramitlerin çevresinde yapılaşma tamamiyle köy. Otelin anlaşmalı olduğu kişilerle, piramit çevresinde ben ve arkadaşım ATV turu yapmak istedik. ATV’lerle tam olarak bu köylerin içinde geçtik ve her yer at ve deve dışkılarıyla doluydu. Çölde yaklaşık 1 saat ATV’lerle tur yaptık ve piramitlerin manzarasında gün batımını izledik.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/piramit7.jpeg&quot; alt=&quot;piramit7&quot; title=&quot;piramit 7&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ayrıca, ATV turundan önce piramitleri gezerken, yakınlarında deve ile gezintiye de çıktı. Binişi gayet güvenli, yavaş hayvanlar ve korkutacak birşey yapmıyorlar.
Tek sıkıntı, deve yatarken üstüne biniliyor ve deve ayağa kalkarken, yerden bayağı yükseldiğimiz için ufak çaplı bir korku oluşuyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/piramit8.jpeg&quot; alt=&quot;piramit8&quot; title=&quot;piramit 8&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kahire Kulesi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kahire kulesi, 1950’lerde inşa edilmiş 187 metrelik kuledir. (Boyutunu gözönüne getirmek için, Atakule 80lerin sonunda yapılmış ve 125 metredir.) Burası aynı zamanda televizyon kulesidir. (Mesela çamlıca tepesindeki çamlıca kulesi de, televizyon kulesi olarak kullanılıyor. Televizyon kulesinde, radyo ve televizyon kanalları için antenler oluyor. Bu antenlerin farklı yerlerde olması yerine, merkezi olarak bir yere yerleştirip daha estetik durması sağlanıyor. Mesela radyo kanalı, yayınını kuledeki antene gönderiyor. Bu anten üzerinden o bölgeye yayın sağlanmış oluyor. Radyo ve televizyon vericileri burada konumlanmış oluyor. Mesela istanbulda çamlıca kulesi yapıldıktan sonra başka yerlerdeki antenler söküldü.)&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/kule1.jpeg&quot; alt=&quot;kule1&quot; title=&quot;kule 1&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kahire kulesi, Nil’in ikiye bölünüp ortada oluşturduğu zamalek ada semtinde yer alır. Bu adada futbol sahaları ve spor kompleksleri var. Galatasarayda forvet olarak oynamış mustada muhammed, zamalekten transfer olarak galatasaray gelmişti.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/kule2.jpeg&quot; alt=&quot;kule2&quot; title=&quot;kule 2&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/misir/kule3.jpeg&quot; alt=&quot;kule3&quot; title=&quot;kule 3&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Asansörle 70 kat çıkılarak en üste ulaşılıyor. Bileti 225 mısır poundu ve yukarıdaki kahire ve nil manzarası muhteşem. Ama üstte gördüğünüz manzarada yürümek için aşağı indiğinizde o büyü kayboluyor. Çünkü sokaklarda yürümek büyük çile. Her yer kir içinde, bazı yerler kokuyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/kule4.jpeg&quot; alt=&quot;kule4&quot; title=&quot;kule 4&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/misir/nil.jpeg&quot; alt=&quot;nil&quot; title=&quot;nil&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Mimari olarak lotus (nilüfer) çiçeği ilham alınarak yapılmıştır. Antik mısırda, en önemli ticaret kaynaklarından birisi de yağ endüstrisiymiş. Bitkilerden çıkarılan yağları medikal amaçlarla kullanıyorlarmış ve önemli bitkilerden birisi de lotus çiçeğiymiş. Ayrıca Kuledeki restoranda alkol satışı da var.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Mısır Medeniyeti Ulusal Müzesi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Antik mısırdan, günümüzdeki mısırın kuruluşuna kadar tarihi eserleri barındıran müzedir. 
Müze için çok güzel bir kampüs oluşturulmuş. Müze çevresindeki yerleşim alanı tamamen çöl renginden oluşurken, müze için, içerisinde yapay göl olan ve bol bol yeşil alan barındıran kampüs inşa edilmiş.
Müzeye girişler ücretli (hatırlamıyorum) ve sadece nakit geçiyordu. Elimizde nakit olmadığı için, müzenin girişindeki atm’lerden para çektik.
Müzenin 2 kattan oluşuyor. Giriş katı ve -1. Kat. Giriş katta antik mısır tarihinden mısır cumhuriyetinin kuruluşuna uzanan eserler varken, alt katta gerçek mumyaların sergilendiği özel alan var. Bu alanda, fotoğraf çekilmesi yasak. Ben çevrede kimseyi görmeyince uyanıklık yapıp fotoğraf çekmiştim. Beni kameralardan tespit edip 5 dk sonra bularak, fotoğrafları sildirmişlerdi. Aslında, burada çektiğim fotoğraf mumya değil, duvardaki çakal başlı insan olan mitolojik canlıydı. Kim olduğunu merak etmiştim ve ileride araştırmak için galerimde fotoğrafı dursun istemiştim.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/muze1.jpeg&quot; alt=&quot;muze1&quot; title=&quot;muze 1&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/misir/muze2.jpeg&quot; alt=&quot;muze2&quot; title=&quot;muze 2&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/misir/muze3.jpeg&quot; alt=&quot;muze3&quot; title=&quot;muze 3&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/misir/muze4.jpeg&quot; alt=&quot;muze4&quot; title=&quot;muze 4&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Peki kimdi o canlı? Cevap, Anubis.&lt;/p&gt;

&lt;p&gt;Anubis, bedenin çürümesini engelleyen mumyalama işlemini ilk yapan kişidir. Mumyalama tanrısı, ölüm ve cenaze tanrısı olarak da bilinir. Bu yüzden mumyalamakla görevli kişiler Anubis maskesi takardı. Çakal başlı maskenin olma nedeni, çakalların mezarlar etrafında dolaşmasından dolayı gelir. Anubis, cenazeleri mumyalayarak onları koruduğu için, aslında mezarlarını koruyor gibi düşünülebilir. Diğer dünyada ölülerin korunmasından sorumlu oluyor. Resimlerde her ne kadar korkutucu görünse de, iyi bir tanrıymış.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/anubis.jpeg&quot; alt=&quot;anubis&quot; title=&quot;anubis&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Kavalalı Mehmet Ali Paşa Cami&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Kavalalı Mehmet Ali Paşa ya da mısırlıların tabiriyle muhammed ali paşa.
1805 yılından itibaren osmanlıdan mısıra atanan valiler kavalalı soyundan oluyor.
Kavalalı hanedanı 1805’ten mısırda cumhuriyet ilan edilen 1953’e kadar devam ediyor. 
Kavalalı Mehmet Ali Paşa, osmanlıya, rum ve vahhabi isyanlarının (mekke ve medineyi vahhabbilerin elinden aldı) bastırılmasında destek verdi. Yunanlıların yaptığı Mora isyanında osmanlıya destek verdi fakat karşılığında mora yarımadasını istedi. İlk başta bu isyanı bastırdı, fakat devreye ingiltere rusya fransa girince, yunanlılar bağımsızlığını ilan etti. Dolayısıyla morayı alamadı. Şam valiliğini isteyince kabul edilmedi. Osmanlıya savaş ilan ederek, oğlu ibrahim paşayı göndererek önce şamı, sonra adana ve tarsusu, sonra da konyayı aldı. 2. Mahmutu devirip yerine oğlunu tahta geçirmek istedi. İstanbula kadar gelebilecek olan kavala ordusuna karşı osmanlı, ingiltere ve fransadan yardım istedi. Onlar kabul etmeyince rusyadan yardım istendi ve hünkar iskelesi anlaşması ile ruslar istanbula geldi. Daha sonra ingiliz ve fransızların devreye girmesiyle anlaşma imzalandı ve mehmet ali paşaya, şam valiliği, oğlu ibrahim paşaya hicaz(cidde) valiliği verildi. Bu olaylar toplamda 2 yıl sürdü. 2. Mahmut bu bölgeleri geri alabilmek için 6 yıl sonra nizipe (gaziantep bölgesi) ordu gönderdi, fakat ibrahim paşa osmanlı ordularını yendi. İbrahim paşa tekrar istanbula ordularıyla yürüdü. İstanbula gelirken 2.mahmut öldü ve osmanlı donanması iskenderiyede (** Büyük iskender, gittiği ve fethettiği bölgelere kendi ismini vermiş. Mısırdaki iskenderiye ve hataydaki İskenderun bunlardan bazıları) ibrahim paşaya teslim edildi. İstanbula gelen ibrahim paşaya karşı ingiltere avusturya ve rusya araya girerek anlaşma yapmak istedi, fakat ibrahim paşa kabul etmeyince ingiliz ve osmanlı donanması birlikte kavalalılara karşı savaştı ve yenilgiye uğrattı. Şam ve Hicaz kavalalıldan çıktı, osmanlı donanması geri verildi. Mısır iç işlerinde bağımsız (kavalalı hanedanlığına), dış işlerinde osmanlıya bağımlı olarak kaldı.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/kavala.jpeg&quot; alt=&quot;kavala&quot; title=&quot;kavala&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Kavalalı Mehmet Ali Paşa, mısıra vali atandıktan sonra modern mısırın kurulmasının temellerini atmış kişidir. Kente kale, cami, altyapı gibi birçok eser kazandırmıştır ve Kavalalı Mehmet Ali Paşa Cami de bunlardan birisidir.
Biz saat 4 gibi girişine ulaşmıştık fakat cami kapalıydı. Girişi  sanırım öğlen saat 3’te kapanıyordu. Sadece dışarıdan görmekle yetindik.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/misir/kavala1.jpeg&quot; alt=&quot;kavala1&quot; title=&quot;kavala&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;h2&gt;Ekstra Öğrenilen Bilgiler&lt;/h2&gt;

&lt;h3&gt;Sagopa Kajmer&lt;/h3&gt;

&lt;p&gt;İsminin anlamının piramitlerle alakalı olduğundan bahsederdi. Sagopa, Mısırdaki bir piramit, Kajmer de bu piramiti keşfeden ve araştıran kişi. Rehber böyle bir piramidin ve hikayenin olmadığını ve uydurma olduğunu söyledi.&lt;/p&gt;

&lt;h3&gt;Her firavunun bir Musası vardır&lt;/h3&gt;

&lt;p&gt;Musa, yahudilerin en büyük peygamberi, tevratın gökten indiricisi. Ne zaman yaşadığına dair net bilgi yok fakat mö1500-1300 yıllarda yaşadığı düşünülüyor. Firavun, israiloğullarının gittikçe büyüdüğünü ve kendisinin düşmanlarıyla işbirliği yaparak tahttan indirilebileceğini düşündüğü için, bunlardan doğan her yeni erkek çocuğunu öldürtme karar alır. Annesi, musanın öldürümemesi için bebekken bir sandık içine koyar ve nil nehrine bırakır. O zamanki firavunun sarayının yanında sandık durur ve firavun tarafından sahiplenilir, elleriyle büyütülür. Daha sonra Musaya ilk kutsal kitap olan Tevrat indirilir ve musa, firavunun kendisine iman etmesini söyler. Firavun, musa ve inananlarını öldürmek için peşlerine düşler ve Kızıldeniz kıyısında yakalar. Musa, elindeki asayla kızıldenizi ikiye yarar ve kendi ve inananlar karşıya geçer. Firavun ve askerleri denizin ortasındayken deniz tekrar birleşir ve onlara mezar olur. Firavun, öleceğini anlayınca iman eder ama samimi olmadığı, sadece ölümden kaçmak istediği için firavun imanı kabul olmaz.
Her firavunun bir musası çıkar sözü, her insanı, zalimce davranan birisinden kurtaracak bir kişi her zaman çıkar anlamındadır.&lt;/p&gt;

&lt;h3&gt;Tutankhamun&lt;/h3&gt;

&lt;p&gt;O dönem için hiçbir özelliği olmayan bir firavun. Tahta çok genç yaşta geçmiş (9-10 yaşları) ve çok genç yaşta da (20li yaşlar) ölmüştür. Tarihsel açıdan önemi ise, mezarının hiç bozulmamış şekilde bulunmasıdır. Firavun mezarlarına, firavunların hazineleri konduğu için, bunlara yönelik mezar soygunculuğu çok yaygındır. Bulunan tüm firavıun mezarlarında hırsızlık yapılmışken, bir tek bunun tüm hazinesi günümüze kadar gelmeyi başarmıştır.&lt;/p&gt;

&lt;h3&gt;Mısır İsmi Hakkında&lt;/h3&gt;

&lt;p&gt;Mısırın resmi ismi Mısır Arap Cumhuriyeti. Arapça ismi misr. Anlamı da memleket, şehir demek. İngilizce olarak da Egypt deniliyor. Eski yunanca da aigyptos (aigos iptios kısaltması, yani egeden sonrası anlamında), oradan da Latinceye aegyptus olarak geçiyor. Eskiden yunanlılar bu bölgeyi bu isimle andıkları için Egypt olarak kalıyor.
Bizler, çoğu ülke ismine İngilizce karşılığı değil, o ülkenin orijinal adına göre sesleniyoruz. Mısır için de, Arapçadaki halini Türkçeleştirecek kullanıyoruz.&lt;/p&gt;

&lt;h3&gt;Kişilerin İsim yapısı&lt;/h3&gt;

&lt;p&gt;&lt;em&gt;isim&lt;/em&gt; / &lt;em&gt;baba-ismi&lt;/em&gt; / &lt;em&gt;dede-ismi&lt;/em&gt; / &lt;em&gt;varsa aile-ismi&lt;/em&gt;&lt;/p&gt;

&lt;p&gt;Mesela eski galatasaraylı mısırlı futbolcu Mustafa Muhammed Ahmed Abdullah.
Burada Mustafa kendi ismi, muhammed baba ismi, Ahmed dedi ismi, Abdullah da genel aile ismidir.
Kadınlarda, evlendikten sonra isminde ve soyisimlerinde bir değişme olmaz, aynı kalır.&lt;/p&gt;

&lt;h3&gt;Pi sayısı ve piramitler&lt;/h3&gt;

&lt;p&gt;Pi sayısı, en meşhur irrasyonel sayı. İrrasyonel ne? Rasyonel olmayan. Rasyonel, mantıklı demek. O zaman irrasyonel
Sayı mantıksız sayı mı oluyor? Hayır. Rasyonal, rational’dan geliyor, yani oranlanabilir, kesirlenebilir sayı. İki tam sayıdan kesirlenebilir olarak üretilen sayılara rasyonel denir. Mesela 0.5, 1/2 olarak kesirlenebilir. Ama pi sayısı, rasyonel değil, çünkü hiçbir şekilde iki tam sayının birbirine oranıyla ifade edilemez.&lt;/p&gt;

&lt;p&gt;Pi sayısına, Arşimet sabiti de denir. MÖ antik yunanda yaşamış matematikçi, aynı zamanda fizikte suyun kaldırma kuvvetini bulan Arşimet prensibinin de sahibi. Bu adam, matematiksel yöntemlerle pi sayısının değerini ilk hesaplayan kişi oluyor. Bunu da, çemberin içine ve dışına, çembere teğet geçen çokgen şekiller çizerek yapıyor. Çemberin içine çizdiği çokgenin çevresi, çemberin çevresinden küçük, dışına çizdiği çokgenin çevresi, çemberin cevresinden büyük. Mesela çapı 1 olan çemberin içine ve dışına kare koyuyor. Pi aralığını 2.82-4 arası buluyor.  Eğer kare yerine altıgen koyarsa, değer 3-3.46 arası oluyor. Böyle böyle bir çemberin içine ve dışına birçok çokgen çizerek hesaplamalara pi’nin değer aralığını bulmaya çalışıyor. Çokgenin köşe sayısı arttıkça da belirsizlik daha da küçülüyor. Arşimet, pi sayısı değerini virgülden sonra iki basamak kesin olacak şekilde 3,14 hesaplamıştır. Fakat günümüzde de, nerede sona erdiği bilinmiyor, sınırları belirsiz. Bu yüzden irrasyonel sayı deniliyor, çünkü virgülden sonrası kesin değil. 
Peki hesaplamalarda pi sayısı kaç alınıyor? Ortaokulda 3, liselerde 3.14. Nasada hesaplamalar için virgülden sonra 15 basamak kullanılıyor. Fazlasına gerek olmadığı düşünülüyor. Çünkü dünyadan en uzak uzay aracı buradan 20 milyar km uzakta. Yani dünya ve uzay aracının diğer tarafına yarıçap çizilsin. Toplam çevresi 125,5 milyar. Eğer 15’den fazla kullanılsaydı bile 3-4 santim çevre farkı çıkacaktı. Yani 3,14 ideal, nasa kadar hassasiyet istenirse 15 basamak yeterli.&lt;/p&gt;

&lt;p&gt;Pi sayısının, tarihte ilk olarak hesaplandığı yer, antik mısırda piramitlerin inşası sırasında 22/7 olarak hesaplandığına inanılmaktadır. Aslında ortada hesaplama yok. Keops piramidinin yüksekliği, 280 cubit (antik çağlarda ölçü birimi. Orta parmak ile dirsek arasındaki mesafe ve ortalama olarak 45cm. Tabandaki her kenar 440 cubit. Bunu oranlarsak 440/280 = 1,5714. İki ile çarpılırsa 3,1428 çıkıyor. Yani oran taban kenarı ve yüksekliği oranı pi/2 çıkıyor. Buradan yapılan çıkarım da, antik mısırlılar pi’nin farkındaydı ve piramitlerin matematikle iliskisi var, bu oran rastlantısal değil. Bu bilgilerden sonra, antik mısırlıların pi ile bir alakası olmadığı ve antik mısırı yüceltmek için yapılan bir çıkarım olduğu kanaatindeyim.&lt;/p&gt;

</description>
        <pubDate>Fri, 22 Dec 2023 15:10:00 +0300</pubDate>
        <link>http://localhost:4000/2023/Misir-Seyahatnamesi/</link>
        <guid isPermaLink="true">http://localhost:4000/2023/Misir-Seyahatnamesi/</guid>
        
        <category>life</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>Run C program on Java</title>
        <description>&lt;p&gt;I will make a confession. Although I am an OCA/OCP Java programmer, I just learned what native methods are.&lt;/p&gt;

&lt;p&gt;One day, I wondered about the implementation of hashCode in the Object class and saw that it has no implementation and 
it uses the native keyword. The native keyword specifies that a method is implemented in another language, not Java. 
Platform dependent native code (compiled code) is dynamically called by Java and the result of these methods is returned to Java.
This feature is called JNI (Java Native Interface). So somewhere in the JVM, 
there is a hashCode code written in non-Java language (probably C/C++).
So I will try to write C code and run it in Java.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Writing C&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;I will implement stack in the sample C program. This program will
includes 2 parts; &lt;strong&gt;&lt;em&gt;stack header file&lt;/em&gt;&lt;/strong&gt; which includes method definitions, &lt;strong&gt;&lt;em&gt;stack c file&lt;/em&gt;&lt;/strong&gt;
which includes header implementation.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Stack.h&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#ifndef STACK_H_
#define STACK_H_

void push(int data);
void pop();
void display();

#endif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Stack.c&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &quot;Stack.h&quot;

struct node {
    int info;
    struct node *ptr;
} *top;

void push(int data) {
    struct node* temp = (struct node*) malloc(1 * sizeof(struct node));
	if (top == NULL) {
    	top = temp;
        top-&amp;gt;ptr = NULL;
        top-&amp;gt;info = data;
    }
    else {
        temp-&amp;gt;ptr = top;
        temp-&amp;gt;info = data;
        top = temp;
    }
}

void pop() {
    struct node *temp = top;
    if (temp == NULL) {
        return;
    }
    else {
    	temp = temp-&amp;gt;ptr;
	}
    free(top);
    top = temp;
}

void display() {
    struct node *temp = top;
    if (temp == NULL) {
        printf(&quot;stack is empty\n&quot;);
        return;
    }
    while (temp != NULL) {
        printf(&quot;%d -&amp;gt; &quot;, temp-&amp;gt;info);
        temp = temp-&amp;gt;ptr;
    }
    printf(&quot;NULL\n&quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Let’s test stack implementation by &lt;code&gt;gcc -o stack_app Main.c Stack.c&lt;/code&gt; then &lt;code&gt;stack_app.exe&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Main.c&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &quot;Stack.h&quot;

int main() {
    display();
    push(4);
    push(1);
    push(6);
    display();
    pop();
    display();
    pop();
    pop();
    display();
    push(11);
    display();
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/native/c_console_output.png&quot; alt=&quot;cconsoleoutput&quot; title=&quot;c console output&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Writing Java and Native Methods&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Let’s create native methods in our Java class. JNI will be bridge
between our Java codes and C native codes. Static code block will loads 
native codes (we will create shared lib files later) from the file system into memory,
so Stack class is able to use native methods when it needs.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Stack.java&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Stack {

    static {
        System.loadLibrary(&quot;native-stack&quot;);
    }

    public native void push(int val);

    public native void pop();

    public native void display();

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will compile Stack class by using -h flag (&lt;code&gt;javac -h . Stack.java&lt;/code&gt;), 
so it will create Stack.h header
file which includes all native method definitions.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Stack.h&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;/* DO NOT EDIT THIS FILE - it is machine generated */
#include &amp;lt;jni.h&amp;gt;
/* Header for class Stack */

#ifndef _Included_Stack
#define _Included_Stack
#ifdef __cplusplus
extern &quot;C&quot; {
#endif
/*
 * Class:     Stack
 * Method:    push
 * Signature: (I)V
 */
JNIEXPORT void JNICALL Java_Stack_push
  (JNIEnv *, jobject, jint);

/*
 * Class:     Stack
 * Method:    pop
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Stack_pop
  (JNIEnv *, jobject);

/*
 * Class:     Stack
 * Method:    display
 * Signature: ()V
 */
JNIEXPORT void JNICALL Java_Stack_display
  (JNIEnv *, jobject);

#ifdef __cplusplus
}
#endif
#endif
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;We will create Stack.c file for native method implementation of&lt;br /&gt;
Stack.h file generated by compiler. We will use the contents of the Stack.c file 
we created earlier. The only difference is that we will replace 
the old method definitions with new ones in the new Stack.h file.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Stack.c&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &quot;Stack.h&quot;

struct node {
    int info;
    struct node *ptr;
} *top;

JNIEXPORT void JNICALL Java_Stack_push
  (JNIEnv* env, jobject thisObject, jint val) {
	struct node* temp = (struct node*) malloc(1 * sizeof(struct node));
	if (top == NULL) {
    	top = temp;
        top-&amp;gt;ptr = NULL;
        top-&amp;gt;info = val;
    }
    else {
        temp-&amp;gt;ptr = top;
        temp-&amp;gt;info = val;
        top = temp;
    }
}

JNIEXPORT void JNICALL Java_Stack_pop
  (JNIEnv* env, jobject thisObject) {
    struct node *temp = top;
    if (temp == NULL) {
        return;
    }
    else {
    	temp = temp-&amp;gt;ptr;
	}
    free(top);
    top = temp;
}

JNIEXPORT void JNICALL Java_Stack_display
  (JNIEnv* env, jobject thisObject) {
	struct node *temp = top;
    if (temp == NULL) {
        printf(&quot;stack is empty\n&quot;);
        return;
    }
    while (temp != NULL) {
        printf(&quot;%d -&amp;gt; &quot;, temp-&amp;gt;info);
        temp = temp-&amp;gt;ptr;
    }
    printf(&quot;NULL\n&quot;);
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;&lt;strong&gt;Compiling&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Now, we will build our shared library (&lt;strong&gt;native-stack&lt;/strong&gt;. remember static code block in java) from the C codes. The Stack.h file generated by compiler
uses jni.h file. This file comes from JDK, and we will need to include this file when build shared library.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/native/jdk_include_dir.png&quot; alt=&quot;jdkjniheader&quot; title=&quot;jdk jni header&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gcc -c -I%JAVA_HOME%\include -I%JAVA_HOME%\include\win32 Stack.c -o Stack.o&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;code&gt;gcc -shared native-stack.dll Stack.o -Wl,--add-stdcall-alias&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;Let’s test our Stack Java class.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;&lt;code&gt;Main.java&lt;/code&gt;&lt;/strong&gt;&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;public class Main {

    public static void main(String[] args) {
        Stack stack = new Stack();

        stack.display();
        stack.push(4);
        stack.push(1);
        stack.push(6);
        stack.display();
        stack.pop();
        stack.display();
        stack.pop();
        stack.pop();
        stack.display();
        stack.push(11);
        stack.display();

        System.out.println(&quot;java program&quot;);
    }

}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Run Main class&lt;/p&gt;

&lt;p&gt;&lt;code&gt;java -cp . -Djava.library.path=C:/libs/my-dll-path-dir Main.java&lt;/code&gt;&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/native/java_console_output.png&quot; alt=&quot;javaconsoleoutput&quot; title=&quot;java console output&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sun, 16 Apr 2023 17:33:00 +0300</pubDate>
        <link>http://localhost:4000/2023/run-c-program-on-java/</link>
        <guid isPermaLink="true">http://localhost:4000/2023/run-c-program-on-java/</guid>
        
        <category>programming</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Londra Seyahatnamesi [TR]</title>
        <description>&lt;p&gt;&lt;strong&gt;Victoria &amp;amp; Albert Museum&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Victoria kraliçe, Albert ise prens. Tarihte Victoria, en sevilen britanya hükümdarı olarak bilinir. Victoria, sanayi devrimi
döneminde imparator olarak görev yapmış ve Victoria dönemi, britanyanın en güçlü dönemi olmuştur. Bu dönemde işçi sınıfının
ortaya çıkmasıyla, onların ahlaki değerlerini din üzerinden şekillendirmeye çalışmış, köleliği kaldırmış, sanatsal faaliyetlere
önem vermiştir (Geçmişte yapılan çoğu müze, kraliyet ailesi tarafından, halkının kültür seviyesini ve sanata olan ilgisini artırmak için 
yapılmış. Halkını düşünen ve gücü, halkı çıkarına kullanan yöneticilerin olması çok kıskanılası. Günümüzde bile kraliyet ailesinin 
var olması ve sevilmesi tesadüf olmasa gerek). Victoria &amp;amp; Albert müzesi, sanat müzesidir ve girişler ücretsizdir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/victoriaalbertmuseum1.jpeg&quot; alt=&quot;victoriaalbertmuseum1&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/london/victoriaalbertmuseum2.jpeg&quot; alt=&quot;victoriaalbertmuseum2&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Müzede, Islamic Middle East bölümü var ve burada bizi ilgilendiren osmanlı ve safevi döneminden birçok eser var. Bu iki kısım müzenin yarısını kaplıyor
denilebilir. Bu bölümün tam ortasında, cam ile korunan kocaman bir halı var. Dünyanın en büyük halılarından biri diye geçiyor.
Burası South Kensington metro durağına 5 dk yürüme mesafesinde.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/victoriaalbertmuseum3.jpeg&quot; alt=&quot;victoriaalbertmuseum3&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;
&lt;img src=&quot;/images/posts/london/victoriaalbertmuseum4.jpeg&quot; alt=&quot;victoriaalbertmuseum4&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buraya gelmeden önce, hemen yanındaki Natural History Museum’a girmek istedik, fakat tüm biletler satılmıştı. İngiltereye seyahat
etmeden önce, gidilecek yerleri planlamak ve ona göre biletleri önceden almak mantıklı. Biz, gideceğimiz gün alırız diye acemilik
yaparak Natural History Museum, British Museum, Sherlock Holmes Museum ve London Dungeon’a giremedik.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Big Ben&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Westminster metro durağında inip, yukarı çıktıktan sonra bizi karşılayan ilk şey, bu kule oluyor.
Saat kulesi, Westminster Palace’ın doğu kısmında kalıyor ve saat kulesi olarak biliniyor. Fakat işin aslı, 
saat kulesinin içindeki çanları tanımlamak için kullanılır.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/bigben.jpeg&quot; alt=&quot;bigben&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Westminster Palace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;1016 yılında, kraliyet ailesinin yaşaması için inşa ediliyor. Daha sonraları
kullanım amacı değişiyor ve ingiliz parlamento binası oluyor. Girişler 25 pound ve multimedia tour olarak alınıyor.
Girişte, bize rehberlik etmesi için telefona benzer bir cihaz ve kulaklık veriyorlar. Orada bize bina tarihi, 
hangi bölümlerin olduğu, nerelere gitmemiz gerektiği ve hangi amaçlarla kullanıldığı anlatılıyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/westminsterpalace.jpeg&quot; alt=&quot;westminsterpalace&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Victoria Kulesi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Westminster Palace’in batı kısmında bulunan kuleye deniyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Westminster Abbey&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;St. Peter kilisesi olarak da bilinir. St. Peter (Petrus), isanın 12 havarisinden* ilkidir ve ilk papaz olmuştur.
Binanın girişinde üstte isa figürü, altında da 12 havarisinin figürü vardır.
Bu binanın orjinali 900’lü yıllarda manastır* olarak inşa edilmiş, fakat kısa bir süre katedral olarak görev yapmış. 
1066 yılından beri kral ya da kraliçe ilan edilme töreni olan taç giyme törenleri burada yapılır. Biz nisan ayında
gitmiştik, 1 ay sonra gitsek 6 mayıstaki Charles’ın taç giyme törenini görebilirdik. İçerisinde yaklaşık 3000 kişinin de
mezarı bulunur. Isaac Newton bunlardan biridir. İçeride ibadet ücretsiz, fakat turistik amaçlı girilen bölüm 27 pound.&lt;/p&gt;

&lt;p&gt;*12 havaris: İsanın hristiyanlığı yayması için görevlendirdiği müritlerini tanımlamak için kullanılır. Son akşam yemeği (last supper),
isanın romalı askerler tarafından tutuklanıp çarmıha gerilmeden bir gün önce, 12 havarisi ile yemek yemesini tasvir eder
(ortada isa, sağında 6, solunda 6). Yemek sırasında isa, içlerinden birisinin kendisine ihanet edeceğini söyler.
Bu durumu anlatan birçok resim vardır, en ünlüsü rönesansta Leonardo Da Vinci tarafından resmedilmiştir. Resim,
isa, ihanet konusunu söyledikten sonra havarislerin şaşkınlığını resmeder.&lt;/p&gt;

&lt;p&gt;*Kiliseler (church), hristiyanlıktaki kutsal ibadet alanları ve bunlar konum ve büyüklüklerine göre farklı isimlendirilirler.
Katedral (cathedral), şehirdeki en tecrübeli psikoposun (baş papaz) bulunduğu ve diğer kiliselere göre daha büyük
ve ihtişamlı inşa edilen kiliseler. Şapel (chapel), minik kiliseler. Manastır (abbey), din adamlarının emekli olduktan
sonr yaşamaya başladığı alanlar. Buralarda yeni din adamlarını da yetiştirirler.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/westminsterabbey.jpeg&quot; alt=&quot;westminsterabbey&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;London Eye&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Thames nehrinin güneyinde ve Westminster Palace’ın çaprazında bulunan dönme dolaptır.
Bir tam turu yarım saat sürer ve en yüksek noktası 135 metredir. Dönme dolapta toplam 32 kapsül vardır.
Her biri, londradaki bir ilçeyi temsil eder. 2000 yılına girişi kutlamak için milenyum etkinlikleri kapsamında
inşa edilmiş ve hazır olmamasına rağmen 31 Aralık 1999’da açılmıştır. Kullanıma ise Mart 2000’de açılmıştır.
Biletler 40 pound, fakat Madam Tussaud müzesi ve London Dungeon ile alınırsa, üçü 60 pounda geliyor. Biz bunu yapmadık ve çok
pişman olduk. Çünkü Madam Tussaud müzesine de ayrıca 52 pound verdik. London Dungeon’a ise gittiğimizde bilet bulamadık.&lt;/p&gt;

&lt;p&gt;London Eye’ın hemen yanında London Dungeon (korku müzesi) ve Sealife London Aquarium (akvaryum) bulunuyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/londoneye.jpeg&quot; alt=&quot;londoneye&quot; title=&quot;piccadilly circus&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Buckingham Palace&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Westminster Palace’a 15 dk mesafe bulunuyor. Oraya doğru giderken içerisinde göl bulunan güzel bir paktan geçiliyor. 
Biz akşam saatlerinde gittiğimiz için içeriye giremedik, fakat o saatler de bile dışarısı kalabalıktı. Sadece nasıl
bir şey olduğunu gördük ve döndük.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;St. Paul Cathedral&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;St. Paul (Pavlus), isanın 12 havarisinden biri değildir, fakat hristiyanlığın avrupaya taşınmasındaki en önemli figürdür.
Avrupanın hristiyanlaşmasını sağlamıştır. Kendisi Mersin/Tarsus doğumlu. Hristiyan olmadan önce hristiyanlara zulmetmiş,
daha sonra yaşadığı olaylardan sonra hristiyan öğretilerini yaymaya başlamıştır. St. Paul katedrali, 5. St. Paul katedrali
olarak bilinir. Daha önce 4 kere yıkılmış ve yanmıştır. Katedralin ilki 604 yılında saksonlar tarafından inşa ediliyor,
yanıyor. İkincisini vikingler tarafından yıkılır. Üçüncüsü ve dördüncüsü de yanıyor. Bilet 20.5 pound. İçeride
fısıltı galerisi (whispering gallery) var, fakat kapalıydı. Bu kubbeye çıkarak, fısıltı ile bir şey söylendiğinde, kubbenin 
diğer tarafından duyulabilir.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/stpaul1.jpeg&quot; alt=&quot;st-paul1&quot; title=&quot;st. paaul cathedral&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Temple Church&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tapınak şovalyeleri, hristiyan askeri tarikatıdır. Kuruluş amacı, avrupadan kutsal topraklara giden hacıları korumak ve
zarar görmelerini engellemekti. İlk ilkel bankacılık sistemini kurmuşlardır. Avrupadaki hacı, tapınak şovalyesine malını
veriyor, karşılığında başka tapınak şovalyesinin çözebileceği kağıt alıyor. Kutsal toprağa gittiğinde, malını başka
tapınak şovalyesinden alıyordu. Temple Church, ingilteredeki tapınak şovalyelerinin karargahı olması için inşa edildi.
Fransız kralı, tapınak kilisesinin borçları nedeniyle papaya baskı yaparak, tarikatın kapanmasını sağlamış ve tapınak
şovalyelerini idam etmiştir. Varlıkları 1100 ile 1300 arasında yaklaşık 200 yıl sürdürmüştür. Biz buraya saat 4 gibi gitmiştik, 
fakat kapalıydı.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/templechurch.jpeg&quot; alt=&quot;templechurch&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Trafalgar Meydanı&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Fransız devrimi sonrası gerçekleşen napolyon savaşlarından birisi olan ve ingilterenin, fransa ve ispanyol donanmalarına karşı
savaştığı ve kazandığı trafalgar muharebesi anısına yapılmıştır. Meydanın tam ortasında büyük sütun üzerinde, savaşın
kumananı Amiral Nelsson’un heykeli bulunmaktadır. Görünüm olarak Kızılay meydanını andırıyor. Burada gezilecek bir şey yok.
İçerisinde heykel ve havuzların bulunduğu bir meydan. Westminster Palace, Westminster Abbey ve Buckingham Palace’ı gezdikten
sonra akşam üzeri 5 6 gibi, dinlenme ve çevreyi izleme amaçlı gidilebilecek bir yer. Tatilin son günü buraya uğramıştık ve
meydanın da canlı olması etkisiyle 2 saat oturmuştuk.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/trafalgar.jpeg&quot; alt=&quot;trafalgar&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Madam Tussaud Müzesi&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Marie Tussaud tarafından kurulan bal mumu müzesidir. Tussaud, annesinin hizmetçi olarak çalıştığı evde, bal mumu sanatçısı
olan ev sahibinden bu sanatı öğrenerek heykeller yapmaya başlamış ve Londrada bal mumu müzesini açmıştır. Bu müzenin
İstanbul da dahil olmak üzere farklı şehirlerde şubesi vardır. Biz gittiğimizde uzun kuyruk vardı ve normal biletler
tükenmişti. 52 pound ödeyerek sıra beklemeden fast-entry giriş yaptık. Verdiğimiz paraya en çok değen yer burası oldu diyebilirim.
İçeride müzisyenler, sporcular, siyasetçiler olmak üzere 50 civarı bal mumu heykeli var. Heykel bölümü bittikten sonra,
Londra tarihini anlatan 10 dakikalık bir tren yolculuğu başlıyor. Tren vagonları, yandaki figürleri görebilmek için sağa ve
sola tam şekilde dönebiliyor. Yolculuk sonrası ise, yine yaklaşık 10 dakikalık marvel karakterlerinin olduğu ve müzenin
olduğu Londra bölgesini korudukları 3D film başlıyor. Buradaki sinema koltukları da hareketli ve gösterilen sahneye göre, 
öndeki koltuktan yüze doğru su fışkırtılıyor. Sanki filmi yaşıyormuşuz hissi yaratıyor. Burası, baker Street metro durağından 
1 dk yürüme mesafesinde. Ayrıca metro çıkışından yürürken Sherlock Holmes heykeli karşılıyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/tassaud2.jpeg&quot; alt=&quot;tassaud2&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Hyde Park&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Madam Tussaud müzesinden sonraki gezme durağı burasıydı. Metroyla gidilebilirdi, fakat yürümeyi tercih ettik, çünkü buraya giderken
güzergahta Oxfor Street de vardı. 30 dk yürümenin ardından parka geldik. Park tamamen yeşil alan içinde beton yürüme alanları var.
Parkın diğer ucunda göl ve restoran var. Burada 8 pound karşılığı yarım saatlik su bisikleti kiralanıp, göl gezilebilir. 1 saatlik
kiralama seçeneği de var.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/hyde.jpeg&quot; alt=&quot;hyde&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buraya, yürüyüş yapmak bir de halka açık toplantılara katılmak için gidilebilir. Parkın girişinden biraz ileride
Speaker’s Corner yer almaktadır. Burada, toplumu ilgilendiren konularda siyasetçiler, aktivistler ya da toplumu bilinçlendirecek
herhangi bir konuda söyleceği söz olan ünlü ya da ünsüz herkes konuşma yapıyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/speakerscorner.jpeg&quot; alt=&quot;speakerscorner&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tate Modern&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Blackfriars metro durağında inip, köprüden Thames nehrinin güneyine yürerek 10 dakikada ulaşılabilecek ve girişlerin ücretsiz
olduğu sanat galerisidir. İçerisinde birçok oda vardır ve her oda bir fikir üzerine yoğunlaşır. 
Tablo ve tabloların yanında kim tarafından çizildiği ve neyi anlattığını belirten metinler vardır.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/tatemodern.jpeg&quot; alt=&quot;tatemodern&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Ayrıca kısa film ve animasyon odalarına da sahiptir.
Bir odada, haçlı seferlerini anlatan 30 dk’lik kuklalar tarafından oluşturulmuş “Cabaret Crusades” isimli film vardı ve 
bolca Selçuklu kelimeleri geçiyordu (Türkler saldırı yapmaktan geri durmuyor gibi bir cümle de vardı).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/tatemodern1.jpeg&quot; alt=&quot;tatemodern1&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Birçok eser benim için anlamsızdı, fakat bazıları da gerçekten mesaj veriyordu. Mesela burada model araçlar kullanarak,
iklim değişikliğine vurgu yapılmak isteniyor. Soldaki resimde 120 araç, çadır içerisinde motorları çalışır vaziyette bırakılıyor.
Sağdaki resim ise, günler sonra egzos dumanlarının çadırda birikerek büyük bir patlamaya yol açmasını gösteriyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/tatemodern2.jpeg&quot; alt=&quot;tatemodern2&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Buranın biraz ilerisinde Globe tiyatrosu vardır. Burası, Shakespeare tarafından kurulmuş ve oyunlarını sergilediği tiyatro olmuştur.
Hem müze hem de oyunların sergilendiği bölümleri vardır.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Tower of London ve Tower Bridge&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Tower Hill metro durağında inildiğinde, hemen Tower of London karşılıyor. Bu kaleye girmek istedik, fakat biletler tükenmişti ve
giriş için uzun kuyruklar vardı. Hemen ilerisinde ise, Thames nehrinin kuzey ve güneyini bağlayan Tower Bridge bulunuyor.
Bu, Thames nehri boyunca bulunan 15 köprüden, açılır kapanır özellikteki tek köprüdür. Gördüğümüz 5 6 köprü arasından da en ihtişamlısıdır.
Köprünün iki ucunda kuleler vardır ve kuleler arasında da geçit vardır. Buraya çıkarak Londra manzarası görülebilir, fakat buradaki
biletler de bitmişti ve çok kalabalıktı. Bu köprünün hemen batısındaki bir sonraki köprü ise London Bridge. Dümdüz bir köprü ve
neden ünlü olduğu konusunda hiçbir fikrim yok (çünkü Tower Bridge’ı bilmiyorken London Bridge diye köprünün varlığından haberdardık).&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/towerbridge.jpeg&quot; alt=&quot;towerbridge&quot; title=&quot;piccadilly circus&quot; /&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Piccadilly Circus&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Londradaki ünlü meydandır ve buranın Times Square’si denilir. Piccadilly Circus metro durağında inerek hemen buraya çıkılır
ve durağın hemen karşısında Hard Rock Cafe vardır. Durağın çıkış yönü ise, oraların gece hayatının merkezi olan Soho bölgesine çıkar.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/piccadilly.jpeg&quot; alt=&quot;piccadilly&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Akşamları burada sokak müzisyenleri ve sokak sanatçıları, performanslarını sergiler. Londradaki son saatlerim olmasa,
şu 2 arkadaşın müziklerini saatlerce dinleyebilirdim, ama 10 dk dinlemek de yetti.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/london/piccadilly1.jpeg&quot; alt=&quot;piccadilly1&quot; title=&quot;piccadilly circus&quot; class=&quot;center-image&quot; /&gt;&lt;/p&gt;

</description>
        <pubDate>Sat, 15 Apr 2023 17:15:00 +0300</pubDate>
        <link>http://localhost:4000/2023/Londra-Seyahatnamesi/</link>
        <guid isPermaLink="true">http://localhost:4000/2023/Londra-Seyahatnamesi/</guid>
        
        <category>life</category>
        
        
        <category>life</category>
        
      </item>
    
      <item>
        <title>AWS Cloud Practitioner Certificate Exam</title>
        <description>&lt;p&gt;Here is my AWS story.&lt;/p&gt;

&lt;p&gt;I opened my first AWS account 4 years ago. It seemed very complicated because there were over 100 services in AWS and I didn’t know about any of them. 
I had created a database with RDS, but couldn’t connect from my local environment, because it was necessary to know the concept of security groups. 
I had loaded a static web page in S3, but I couldn’t access it from the browser, because it was necessary to make the bucket public from the bucket policies.&lt;/p&gt;

&lt;p&gt;Knowing so many services and having different procedures showed me that using AWS is not an easy task. 
Is it important to me to know AWS? No, because we don’t use cloud technologies at my company, we use entirely on-premise servers. 
However, I felt the need to know because cloud technologies reduce operational costs and help to quickly set up a system from scratch. 
I decided to learn AWS from hero to zero for this.&lt;/p&gt;

&lt;p&gt;I think certification exams are more effective in learning something. 
Because it is different from reading a book or watching a video. 
As it is preparation for the exam, more detailed information is given and this information can save lifes in some edge-cases.&lt;/p&gt;

&lt;p&gt;That’s why I prepared for Cloud Practitioner, the first phase of AWS exams.&lt;/p&gt;

&lt;p&gt;This exam gave me all the information I wanted to know in the first look. I learned the basics of AWS services and components and gained knowledge of most AWS services, or at least an idea of what they do.&lt;/p&gt;

&lt;p&gt;I used the following resources while studying for the exam.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;AWS Certified Developer - Associate Guide (Vipul Tankariya, Bhavin Parmar) &lt;a href=&quot;https://www.amazon.com.tr/AWS-Certified-Developer-developers-certification/dp/1787125629&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Udemy Ultimate AWS Certified Cloud Practitioner - 2022 &lt;a href=&quot;https://udemy.com/course/aws-certified-cloud-practitioner-new&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;Udemy AWS Cloud Practitioner Exams &lt;a href=&quot;https://udemy.com/course/practice-exams-aws-certified-cloud-practitioner/&quot;&gt;Link&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;I read the book in the early days of the pandemic. It covered 28 AWS services in depth. I didn’t watch the videos, 
but I looked at their slides. Here it covered more AWS services, but more superficially. Total 115 AWS services were mentioned in different categories.&lt;/p&gt;

&lt;p&gt;I looked at the slides 3 weeks before I took the exam. With the effect of the book, I can say that I progressed a little fast. 
Then I solved 6 practical exams. With about 3 weeks of study, I passed the exam.&lt;/p&gt;

&lt;p&gt;Next target? AWS Solution Architect. I plan to take in 4 months.&lt;/p&gt;

</description>
        <pubDate>Wed, 16 Nov 2022 14:38:00 +0300</pubDate>
        <link>http://localhost:4000/2022/AWS-Certified-Cloud-Practitioner-Exam-Notes/</link>
        <guid isPermaLink="true">http://localhost:4000/2022/AWS-Certified-Cloud-Practitioner-Exam-Notes/</guid>
        
        <category>software</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>DevOpsDays Turkey &amp; AWS Community Day Turkey [TR]</title>
        <description>&lt;p&gt;Geçen 1 ay içerisinde online olarak 2 farklı etkinlik düzenlendi.&lt;/p&gt;

&lt;p&gt;Etkinliklerde aldığım notları, belki birilerine faydası olur diye burada paylaşıyorum. Kimse bakmasa bile en azından kendime not bırakmış olur, ileride hatırlamak amaçlı göz gezdiririm düşüncesindeyim.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;25 Haziran 2020 - DevOpsDays Turkey &lt;a href=&quot;https://devopsdays.istanbul/&quot;&gt;Etkinlik Sayfası&lt;/a&gt;&lt;/li&gt;
  &lt;li&gt;11 Temmuz 2020 - AWS Community Day Turkey &lt;a href=&quot;https://aws.cloudturkey.io/&quot;&gt;Etkinlik Sayfası&lt;/a&gt;&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;DevOpsDays&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Öncelikle keynote içeriği oldukça basit ve giriş niteliğindeydi, DevOps’tan ziyade programlama üzerinden ilerledi, en son da DevOps’a bağlamak amacıyla 5 dk Azure üzerinde deployment’a girişildi. Fakat, benim gibi C#, .NET hakkında herhangi bir bilgisi olmayanlar için yararlı olduğunu belirtmeliyim.&lt;/p&gt;

&lt;p&gt;Windows CLI nasıl daha güzel ve etkili kullanılabilir hakkında bir blog yazısı&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.hanselman.com/blog/HowToMakeAPrettyPromptInWindowsTerminalWithPowerlineNerdFontsCascadiaCodeWSLAndOhmyposh.aspx&quot; target=&quot;_blank&quot;&gt;How to make a pretty prompt in Windows Terminal with Powerline, Nerd Fonts, Cascadia Code, WSL, and oh-my-posh&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;start . -&amp;gt; cmd’de o an bulunan yerin klasörünü açar.&lt;/p&gt;

&lt;p&gt;.NET = .NET Framework + .NET Core + Xamarin&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Framework for Windows Applications&lt;/li&gt;
  &lt;li&gt;Core for Cross-Platfrom Services&lt;/li&gt;
  &lt;li&gt;Xamarin for Mobile Applications&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;.NET 6 ile bunların hepsi birleştiriliyor, yani artık .NET, hepsini içeren tek bir şey. her yıl major release gelecek, her çift numaralı release’de de LTS(Long Term Support) olacak.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;dotnet new -&amp;gt; yapılabilecek uygulama listesini verir.&lt;/li&gt;
  &lt;li&gt;dotnet run -&amp;gt; mvn clean install gibi. delete, build and run demek. bin altınad dll(dynamic link library) ve exe yaratır. exe’nin boyutu dll’e göre çok büyük. technical olarak exe’ye gerek yok, tek başına dll ile de program çalıştırılabilir.&lt;/li&gt;
  &lt;li&gt;dotnet publish -&amp;gt; öyle dosyalar olusturuyor ki artık çalıştırmak icin bilgisayarda dotnet yüklü olması
gerekmiyor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Cloud Native dünyada CI/CD&lt;/p&gt;

&lt;p&gt;Cloud Native nedir? CNCF tarafından tanımlanan tanımı, kendisi dinlemekten her zaman zevk aldığım Fatih Arslan’ın anlatımıyla şöyle &lt;a href=&quot;https://www.youtube.com/watch?v=UV3C9pgWgRU&quot; target=&quot;_blank&quot;&gt;iliştireyim.&lt;/a&gt; Cloud Native, aşağıdakileri sağlayan uygulamalara deniyor.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Open-Source: Tamamen open-source yazılımlar kullanılacak.&lt;/li&gt;
  &lt;li&gt;Microservices: Uygulamalar mikroservis mimarisinde olacak.&lt;/li&gt;
  &lt;li&gt;Containers: Paketleme container’lar ile olacak.&lt;/li&gt;
  &lt;li&gt;Orchestrators: Container’lar Orchestrator’lar ile dinamik yönetilecek.&lt;/li&gt;
  &lt;li&gt;Optimum Kaynak Tüketimi&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;S2S = Service to Service Communications&lt;/p&gt;

&lt;p&gt;LocalStack: AWS servislerini local’de, Open Source araçlarla simüle ederek kullanmaya izin verir. Mesela S3’ü gerçekten de AWS’de denemek istemediğim durumda iş görür.&lt;/p&gt;

&lt;p&gt;Containerlar ile process’lerin birbirine bulaşmadığına, dosya sistemlerini paylaşmadığına emin oluyoruz.&lt;/p&gt;

&lt;p&gt;DevOps ile, deployment aşamasında acaba şunu update ettik mi vb süreçleri insanlara bırakmadan otomatize ediyoruz.&lt;/p&gt;

&lt;p&gt;From Sasha Rosenbaum on Microsoft DevOps Journey&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Meaure Results, Not Activity&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Horizontal Reposibility yerine Vertical. Yani Developer, SRE, DevOps takımları yok. Her title’ı içinde bulunduran takımlar var, Self Forming Teams.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sürekli Test Ortamlarında Test Güvenilirliğini Sağlamak?&lt;/p&gt;

&lt;p&gt;MLOps: Machine Learning Ops. makine öğrenmesi desteği&lt;/p&gt;

&lt;p&gt;Smell= Zayıflık. İleride başımızın belası olabilir, sorun durumunda anlaması saatlerimizi alabilir. Feature çalışıyor ama beklendiğinden farklı path’de calışıyor, göremiyoruz ama calışıyor görünüyor. Test Smells’ler kaldırılmalı.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Flaky Tests: Bir çalışır bir çalışmaz.&lt;/li&gt;
  &lt;li&gt;Fragile Tests: Çalışıyorsa dokunmayacaksın, dokunursan biter.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;False alarm: Status of feature -&amp;gt; Pass, Execution results -&amp;gt; Fail.&lt;/p&gt;

&lt;p&gt;Cleanup ile ardışık testler arasındaki çalışmalarda güvenlik yaratabilir. Spring’deki @DirtiesContext mesela.&lt;/p&gt;

&lt;video autoplay=&quot;autoplay&quot; loop=&quot;loop&quot; muted=&quot;&quot;&gt;
  &lt;source src=&quot;/images/posts/client.mp4&quot; type=&quot;video/mp4&quot; /&gt;
&lt;/video&gt;

&lt;p&gt;Müşteri her zaman beklemeyeni deneyecektir, senin gibi ortama alışık degil. Neyi nasıl yağacağını
bilmiyor ve ilk defa deniyor.&lt;/p&gt;

&lt;p&gt;&lt;img src=&quot;/images/posts/code-review.png&quot; alt=&quot;code-review&quot; title=&quot;Code Review&quot; /&gt;&lt;/p&gt;

&lt;p&gt;Code Review :D&lt;/p&gt;

&lt;p&gt;SRE, bir yazılımcıdan operasyon yapmasını istemeniz.&lt;/p&gt;

&lt;p&gt;SRE Prensipleri&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;SLI/SLO: Service-Level Indicator. Canlıda yayında olan servisin nasıl ve ne şekilde calıstıgıyla ilgili
bilgiler veren ölçülebilir metricler. Service-Level Objective. SLI ile toplanan metriclere koyulan hedefler.
Mesela erişebilirlik SLI’yi için /user api’si kaç ms’de cevap veriyor? SLO, bu adrese gelen %99 isteğin 50ms altında olması gibi bir heref. Böylece ne kadar başarılıyız raporlayabiliriz. Çünkü şu an herşey data.&lt;/li&gt;
  &lt;li&gt;Hata Bütçesi: Hedeflerin dışında kaldığımız süre ne kadar olabilir? Yani SLO ihlalleri. Bu sistemde hata olabilir demek, bunun sonunca ihlal neredeyse orada iyileştirme yapmamız gerektiğini söyler.&lt;/li&gt;
  &lt;li&gt;Otomasyon: Yarını bugünden daha iyi hale getiren şeyleri makineye yaptırmak.&lt;/li&gt;
  &lt;li&gt;Monitoring: Yayına alınan servislerin içeriden ve dışarıdan metric’lerle sürekli gözlenmesi.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;SRE’in bir diğer yaptıgı iş, felaket senaryolarında sistemi nasıl ayakta tutacak?&lt;/p&gt;

&lt;p&gt;%50-%50 zamanı nasıl kontrol ediliyor? %50’yi geçince ne oluyor? Bu olay, Twitter’da insanların kendi kontrolünde, herkes kendini buna göre ayarlıyor. (%50 mevzusunu bir önceki yazımda yazdım.)&lt;/p&gt;

&lt;p&gt;DevOps Aktiviteleri&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Dev ve Ops gruplaşmasının önüne geçmek, çatışma yerine grup olarak çalışarak istenilen hedefe ulaşmak.&lt;/li&gt;
  &lt;li&gt;Sistemde oluşacak hataları normal kabul etmek. Hata bütçeleriyle belirli seviyede kabul edilebilir. Ama amaç, bütçenin olabildiğince altında oldurması.&lt;/li&gt;
  &lt;li&gt;Değişilikleri ufak parçalar halinde (canary release gibi tekniklerle) yayına almak.&lt;/li&gt;
  &lt;li&gt;Otomasyondan yararlanmak.&lt;/li&gt;
  &lt;li&gt;Herşeyi ölçmek. SRE’de realibility üzerine ölçümler olurken burada herşey olabilir.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;kitap önerisi: &lt;a href=&quot;https://books.google.com.tr/books/about/The_DevOps_Handbook.html?id=XrQcrgEACAAJ&amp;amp;redir_esc=y&quot; target=&quot;_blank&quot;&gt;“The DevOps Handbook”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;AWS Community Day&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bootstapped company: kendi kaynaklarıyla kurulan ve daha sonra yarattığı gelirlerle ayakta olan şirketler.&lt;/p&gt;

&lt;p&gt;Startuplarda hızlı hareket edebilmek gerekiyor, aynı anda birçok şey denemek gerekiyor. İşler değişiyor, adapte olup hızlı şekilde teknoloji geliştirip piyasaya gidememek büyük faktör, bu yüzden bir an önce cloud’a geçip etkili şekilde kullanmak zorundalar.&lt;/p&gt;

&lt;p&gt;metadata: data about data&lt;/p&gt;

&lt;p&gt;US East - North Virginia. Amazon’un en eski region’ı ve tüm yeni özellikler burada release edilir.&lt;/p&gt;

&lt;p&gt;Amazon Forecast: Machine Learning kullanarak tahminler yapan AWS servisi.&lt;/p&gt;

&lt;p&gt;RDS, veritabanı değil veritabanlarını yöneten bir servistir.&lt;/p&gt;

&lt;p&gt;Tuning: performans ayarlama&lt;/p&gt;

&lt;p&gt;S3 tiered storage; Standart, IA (infrequently accessed), Glacier vb.&lt;/p&gt;

&lt;p&gt;CloudTrail: Audit loglar. Servislere, hangi IP’den, hangi kullanıcılardan, hangi istekler geldi.&lt;/p&gt;

&lt;p&gt;AWS-Managed key’ler sadece symmetric key’leri desteklerken, Customer-Managed key’ler hem symmetric hem de asymmetric olabilir.&lt;/p&gt;

&lt;p&gt;Amazon EKS (Elastic Kubernetes Service): full-managed kubernetes servisi. böylece ölçeklenebilir ve erişilebilir container yönetimi.&lt;/p&gt;

&lt;p&gt;AWS Fargate: Serverless Container, yani EC2 gibi VM ihtiyacı duymadan anında container deployment’ı.&lt;/p&gt;

&lt;p&gt;EKS ve Fargate, ekstra ayar yapmadan birlikte kullanılabilir.&lt;/p&gt;

&lt;p&gt;Amazon ECR (Elastic Container Registry)’den Fargate’e “image pull” and “then run”.&lt;/p&gt;

&lt;p&gt;AWS CDK (Cloud Development Kit): Yeni nesil IaC (Infrastructure as Code) oluşturma. Hali hazırda CloudFormation bu işi zaten yapıyordu. CDK, altında yine CloudFormation’ı kullanıyor fakat bu IaC, bildiğimiz yollardan, tıpkı yazılım geliştiriyormuşuz gibi (desteklenen diller: typescript, python, java, .net) ile oluyor.  CloudFormation öğrenmeye gerek kalmadan olusturmayı sağlıyor. En sonda bu oluşturulan şeyler, CloudFormation’a derleniyor ve AWS’de CloudFormation engine’e gönderiliyor.&lt;/p&gt;

&lt;p&gt;EC2 instance giderleri, spot instance (datacenterda bulunan ve kullanımda olmayan instacelar) kullanılarak (instance tipine göre farklı ve anlık değişen indirimler) %90’a kadar azaltılabilir.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://aws.amazon.com/tr/ec2/spot/instance-advisor/&quot; target=&quot;_blank&quot;&gt;“spot instance’ların kapatılma sıklığı oranları”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://github.com/awslabs&quot; target=&quot;_blank&quot;&gt;“https://github.com/awslabs”&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;SNS Fanout: bir mesajın, ona abone olan birçok yere gönderilmesi.&lt;/p&gt;

&lt;p&gt;Event-Driven Architecture Patterns&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Event Notifications: bir sistemdeki değişikliği diğer sistemlere aktarma.&lt;/li&gt;
  &lt;li&gt;Event-Carried State Transfer: önceki state’im bu, şimdiki state’im bu bilgilerinin ikisini birlikte aktarma.&lt;/li&gt;
  &lt;li&gt;Event Sourcing: event logları üzerinden uygulamanın o andaki state’ini elde etme.&lt;/li&gt;
  &lt;li&gt;CQRS: Event sourcing üzerinde sistem büyüdükçe yönetimi kolaylaştırmak için query ve command işlemlerini ayırma.&lt;/li&gt;
&lt;/ul&gt;

</description>
        <pubDate>Wed, 15 Jul 2020 21:26:00 +0300</pubDate>
        <link>http://localhost:4000/2020/devopsdays-tr-and-aws-community-day/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/devopsdays-tr-and-aws-community-day/</guid>
        
        <category>software</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>Cloud and Serverless Turkey Ramazan Özel [TR]</title>
        <description>&lt;p&gt;Merhabalar,&lt;/p&gt;

&lt;p&gt;Ramazan ayı boyunca Cloud and Serverless Turkey meetup ekibi haftada bir yada iki olmak üzere, ben gibi Cloud’a yeni başlayacaklar için çok yararlı olacak online etkinlikler düzenledi. Ben de dinlerken bazı önemli gördüğüm noktaları not aldım ve blog’uma aktarmak için şu an zaman bulabildim.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://kommunity.com/cloud-and-serverless-turkey/events/serverless-turkiye-ile-ramazan-ozel-134b33a1&quot;&gt;Etkinlik Sayfası&lt;/a&gt;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;6 Mayıs Çarşamba - AWS Global infrastructure: Uygulamamı us-east-1’a deploy ettim patladı, orucum kabul olur mu?&lt;/li&gt;
  &lt;li&gt;12 Mayıs Salı - DevOps vs SRE: hangisi daha çok sevap point kazandırır?&lt;/li&gt;
  &lt;li&gt;15 Mayıs Cuma - Cold Start ve diğer Serverless problemleri: İstemeden Cold Start’a yakalandım, orucum bozulmuş olur mu?&lt;/li&gt;
  &lt;li&gt;18 Mayıs Pazartesi - Container vs Serverless: Containerlar ile Serverless fonksiyonları beraber kullanmak caiz midir?&lt;/li&gt;
  &lt;li&gt;21 Mayıs Perşembe - Cloud’a nasıl başlarım: Cloud korkularımı yenmek için ne yapmayalım?&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;AWS Bulut Altyapısı Bileşenler: Zone, Region, CDN ve daha fazlası&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=Sn4sSTtYj-A&quot; title=&quot;AWS Bulut Altyapısı Bileşenler&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/Sn4sSTtYj-A/0.jpg&quot; alt=&quot;AWS Bulut Altyapısı Bileşenler&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS altyapısı ile ilgili kavramları (Regions, AZ-Availability Zones, Local Zones, Point of Presence, Network) görsel olarak anlatan bir site.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://infrastructure.aws&quot; target=&quot;_blank&quot;&gt;infrastructure.aws&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Region seçimindeki en büyük fark lateny. Türkiye için genelde Frankfurt tercih ediliyor. (60-80ms round trip latency) Mesela Dublin için 130ms. Rakamların anlam kazanması için; insanın gözünü açıp kapatması 300ms sürüyor.&lt;/p&gt;

&lt;p&gt;Bulunduğunuz bölgeden region’lara olan latency’i hesaplayan bir site. Region seçiminde faydalı olabilir.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.cloudping.info/&quot; target=&quot;_blank&quot;&gt;cloudping.info&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Peki region, latency harici neye göre seçilmeli? Yeni servis ya da yeni eklenen özellik hemen tüm region’lara gelmiyor. Genelde avrupa için ilk region olan Dublin’e geliyor. Tabii, müşteri profiline göre de bir etkisi var. IoT sektörü oralarda daha gelişmiş olduğu için IoT özellikleri genelde Frankfurt’a geliyor.&lt;/p&gt;

&lt;p&gt;Her servisin fiyatı her region’da aynı değil, maliyete göre fiyatlandırma yapılıyor; enerji maliyeti, insan gücü maliyeti vs. Mesela Amerika’da enerji, Amazon’un kendi güneş panellerinden üretildiği için oradaki servisler daha ucuz.&lt;/p&gt;

&lt;p&gt;AZ-Availability Zones = Datacenter Cluster&lt;/p&gt;

&lt;p&gt;Az to AZ latency: 2-4 ms&lt;/p&gt;

&lt;p&gt;Veriyi region’a yükleyince, arka planda birden cok AZ’ye replica ediyor. Yüzde 99,9…(9 tane 9) availability sağlıyor. Veri sadece o region’da, regionlar arası kopyalama yok. Böylece Türkiye bir gün region olursa, veri Türkiye dışına çıkmıyor, yani KVKK’ya uyuyor.&lt;/p&gt;

&lt;p&gt;Local Zone= Tek datacenter ve bir region’a bağlı. Altyapıyı hızlı şekilde kurmak için, tüm servisler yok, amaç ihtiyaca göre hızlı cevap verecek şekilde tasarlamak, diğer türlü AZ tasarlamak zor.&lt;/p&gt;

&lt;p&gt;Point of Presence ile latency’i azaltmaya yönelik region’a giden yolda cache noktaları var.&lt;/p&gt;

&lt;p&gt;Spot instance: Çok kullanılmayan makinelerde (mesela milanda daha az kullanıcı varsa) daha ucuz maliyetle servisleri kullanabilme imkanı var, açık artırma gibi. Diğer kullanım yöntemleri on-demand ve reserved instances.&lt;/p&gt;

&lt;p&gt;Ya region fail olursa? O zaman region bazında high availability seçeceksin. Uygulamayı iki regiona dağıtacaksın. Bu da x2 maliyet demek. Ortada bir trade-off var: risk mi maliyet mi? Ama zoned-based architecture yeterince güvenli.&lt;/p&gt;

&lt;p&gt;AWS neye göre region kuruyor? return of invesment: yatırımı kaç senede cıkarabilirim?&lt;/p&gt;

&lt;p&gt;AWS re:Invent 2016: Amazon Global Network Overview with James Hamilton&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=uj7Ting6Ckk&quot; target=&quot;_blank&quot;&gt;AWS arkasındaki mühendislik&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;DevOps ve SRE farkı nedir?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=WiYBsY_6FFU&quot; title=&quot;DevOps ve SRE farkı nedir?&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/WiYBsY_6FFU/0.jpg&quot; alt=&quot;DevOps ve SRE farkı nedir?&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Farklarında önce bir benzerliği, ikisi de cross-functional team.&lt;/p&gt;

&lt;p&gt;DevOps, developerlar işini yapabilsin diye kod hariç herşeyi yapan kesim. Yazılım sektörüyle ilgili teknik pratikleri içerir.&lt;/p&gt;

&lt;p&gt;SRE-Site Reliability Engineer, ilk olarak Google tarafından uygulanmıştır. google’ın tanımına göre yazılımcıya SysAdmin işlerini vermeye deniyor.&lt;/p&gt;

&lt;p&gt;SRE implements DevOps.&lt;/p&gt;

&lt;p&gt;SRE’in ana görevi reliability, yani üründe çıkan soruları çözerek ürünün ayakta sağlam şekilde olmasında sorumlu, bunu da Scalability, Security, Monitoring, Automation gibi DevOps süreçleriyle sağlıyor. Burası işinin %50’si. Kalan %50’si ile yazılım yaparak ürün geliştirme. Ama bu geliştirme domain’e yönelik değil, developer’ların kullanacağı ürünler. Yani infrastructure development.&lt;/p&gt;

&lt;p&gt;SRE, şirket içindeki en güçlü yazılım mühendisleridir,koçluk yaparlar, best practice’leri anlatırlar, 2-3 ay bir takıma giderler ve reliability olmayı öğretirler.&lt;/p&gt;

&lt;p&gt;Altyapıdaki know-how’ı almak, kişileri bu altyapıya entegre etmek aylar sürebilir. SRE’in altyapıda kullanılan herşey hakkında, normalin ilerisinde bilgisi olmalıdır.&lt;/p&gt;

&lt;p&gt;Altyapı çok sancılı bir süreç. Herşeyi tasarladın yaptın ettin ama buna adapte olacak kimse yoksa, yine reliability’in kırılıyor.&lt;/p&gt;

&lt;p&gt;Developer’ların kafkayı nasıl scale edeceğini bilmesi gerekmiyor, ama oraya nasıl mesaj atacak bilebilmeli. Buradaki ownership, takımlarda değil SRE’de. Developer nasıl kullanacağını biliyor ama nasıl çalışıyor bilmiyor. Serverless’a yakın bir sistem sunuluyor aslında. Shared-Responsibility.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://jbd.dev/prod-readiness/&quot; target=&quot;_blank&quot;&gt;https://jbd.dev/prod-readiness/&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/google-cloud/production-guideline-9d5d10c8f1e&quot; target=&quot;_blank&quot;&gt;https://medium.com/google-cloud/production-guideline-9d5d10c8f1e&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;FaaS - Serverless (AWS Lambda) Problemleri ve Çözümleri&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=keNdLKPi2gQ&quot; title=&quot;FaaS - Serverless (AWS Lambda) Problemleri ve Çözümleri&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/keNdLKPi2gQ/0.jpg&quot; alt=&quot;FaaS - Serverless (AWS Lambda) Problemleri ve Çözümleri&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;AWS Lambda, tam karşılığı FaaS, büyük uygulamaları input ve output olacak şekilde küçük function’lara bölüyoruz. Nerede nasıl hangi serviste çalışacak, scalabilty’si bizi ilgilendirmiyor, bunlarla serverless ilgileniyor. Aslında adı da buradan geliyor, server’ları bizden soyutladığı için serverless deniliyor, yoksa arka planda yine server’larda çalışıyor. AWS Lambda, stateless bir servis. Ayrıca event-driven. Mesela S3’e dosya eklendi, bu create event yaratır, lambda bunu yakalayarak trigger’lanabilir. Event nasıl gelecek, nasıl işleyeceğim diye endişelenmiyorsun, geldiği an işliyorsun ne güzel.&lt;/p&gt;

&lt;p&gt;Lambda Problemleri&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Cold Start&lt;/strong&gt;; Initialize olma süresine cold start deniyor. Lambda container’lar üzerinde çalışıyor. Uygulamaya request geldiğinde, lambda önce hazırda varsa ona yonlendiriyor, yoksa yeni container ayağa kaldırıyor. Container’lar hızlı ayağa kalkıyor ama buradaki asıl sorun uygulamanın ayağa kalkması. Mesela spring saniyelerce sürüyor. Bu genelde Java sorunu, Spring’i lambda’ya olduğu gibi taşırsan oooooppppsssss.&lt;/p&gt;

&lt;p&gt;Lambda işi bitince, container’ı freeze ediyor, request gelince tekrar unfreeze ediyor. Belli süre request gelmezse, buna zaten istek gelmiyor deyip kendini kapatıyor. Bu yüzden stateless olsun deniyor lambda’larınız.&lt;/p&gt;

&lt;p&gt;Bazı çözüm yolları;&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;İstenilirse istenen sayıda container ayakta tutulur. Negative effect: pricing. Zaten EC2 yerine kullanma nedeni ucuza getirmek, sadece function’ın çalıştığı süredeki kaynaklar için ödeme yapılıyor.&lt;/li&gt;
  &lt;li&gt;Boş/dummy mesajlar gönderilerek kapanması önlenebilir, warmup.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;At Least One Delivery Problem&lt;/strong&gt;. Tek bir request için bir kez çalışması beklenen function’da, iki kere calısma yaşabiliyor. Çünkü exactly once maliyetli, bunu sunars throughput’u düşüyor. Idempodent işlemler sorun olmaz ama ödeme gibi önemli islemlerde birden fazla olamaz. Distributed, genelde at-least-one sunuluyor, aynı durum standart SQS’te de var.&lt;/p&gt;

&lt;p&gt;Step functions bunu cozuyor.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Lambda&lt;/strong&gt;, çok fazla scale edilirse &lt;em&gt;concurrent&lt;/em&gt; calışarak, on-demand servisere mesela RDS’e birçok connection açılabiliyor. Lambda’da bu, concurrent execution limit ile sınırlanabiliyor, peki ama gercekten scale etmesi gerekirse o zaman edemez. RDS özelinde bu, RDS proxy ile direkt DB’ye connection açmak yerine proxy’e açılarak çözülüyor. Proxy, fiziksel connectionları yönetiyor, bu sayede yükün çoğu proxy’e biniyor.&lt;/p&gt;

&lt;p&gt;OpsGenie 40.000 $’lık fail hikayesi. Cloudwatch’a log geldikçe lambda yakalıyor ve graylog’a gönderiyor.
Graylog down oluyor. buraya gönderilemeyen mesajlar dead letter queue’da birikiyor. Lambda DLQ’dan tekrar tekrar trigger oluyor. 2 hafta boyunca queue büyüdükçe lambda sürekli scale oluyor. Sonuç 40bin dolar fatura.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Monitoring ve Debugging&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Lambda dışarıdan connection kabul etmiyor. Nedeni VPC, ona adres atamıyor. Ancak API Gateway ile dışarıdan erişilebilir.&lt;/p&gt;

&lt;p&gt;Lambda yalnızca request’i işlerken aktif, o yüzden iş bitince arkada logu gonderecek bir şey yok. Her an ölebilir, donabilir, loglar da gönderilmeden kalabilir. mesela Elasticsearch API ile göndermek uygulamayı ağırlaştırır, o yüzden bir seçenek değil.&lt;/p&gt;

&lt;p&gt;Uygulamada debugging nasıl oluyorr? IDE, uygulamaya network connection açıyor. Debug ile alakalı komutlar, bu TCP connection üzerinden gidiyor. Lambda da dışarıdan bağlanamıyosun, ee? Thundra, bu workaround’da çalışıyor. IDE ve lambda ortada broker’da buluşuyor. Kullanıcılar local IDE’sinden debug edebiliyor.&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://medium.com/@serhatcan/how-aws-lambda-team-made-my-two-years-old-talk-completely-irrelevant-1c74c528ca78&quot; target=&quot;_blank&quot;&gt;How AWS Lambda team made my two years old talk completely irrelevant by Serhat Can&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Bulutta Yüksek Performanslı ve Verimli Sistem Tasarlama&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&quot;https://www.youtube.com/watch?v=nuOCuAwQwvo&quot; title=&quot;Bulutta Yüksek Performanslı ve Verimli Sistem Tasarlama&quot;&gt;&lt;img src=&quot;http://img.youtube.com/vi/nuOCuAwQwvo/0.jpg&quot; alt=&quot;Bulutta Yüksek Performanslı ve Verimli Sistem Tasarlama&quot; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Metrics&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;İşler iyi gitmiyorsa problemin nerede olduğu metric’lerden anlaşılır. O yüzden iyi bir sistem tasarlarken metric toplamak, özellikle hangi metric’ler toplanacak önemli. Mesela dışarıya API sunuluyorsa bu metricler latency, erros, CPU/memory/IO olabilir. Latency yüksekse client, sistem performansından memnun olmaz demektir, bu anlaşılır.
Avg latency’e bakmak outlier’ları gizler, bunun için performansa bakılırken avg latency yerine p90, p99, max latency ile ilgilenilmeli. (p90=percentile 90. x latency ile alakalı metric’lerin yüzde90’ı x altında.)
Max latency, sistem en kötü durumda ne kadar cevap veriyor demek, bu yüzden max’a başvurmak en iyisi.&lt;/p&gt;

&lt;p&gt;Client Error (HTTP 4xx) ignore edilebilir, ama sık sık gelirse incelenmesi gerekebilir. Server Error (5xx) aslında önemli, bu error’lara alarm kurmak iyi bir pratik.&lt;/p&gt;

&lt;p&gt;Sunucu üzerinde calısan uygulamalar icin CPU/memory/IO. Eğer memory, sınırlarda dolaşıyorsa out-of-memory yemesi işten bile değil. IO, sürekli diske yazan okuyan işlemler, belki bir kere okuyup cacheleyerek disk üzerindeki baskıyı azaltmak yerine sürekli diskten okuma, sistem yavaşlığına sebep olabilir. Bu metric ile anlaşılabilir.&lt;/p&gt;

&lt;p&gt;Servislere özel metricler; redis, lambda, sqs, knesis, dynamodb’a özel metricler. mesela sqs’de # msg visible, bir anda artarsa kuyrukta consume hızı yavaş, ileride sorun yaratabilir uyarı demek. Redis icin eviction (cache belli bir memory sınırına ulaşınca, kendisini sağlıklı tutabilmek için cache’deki varolan itemlar’den evict etme).
Eviction’ların çok olması, memory’nin yetersiz olduğuna ya da gereksiz yere çoğu şeyi cache’de tuttugumuz anlamına gelebilir.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Caching&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Amaç, optimizasyon ve daha iyi performans. Ne tür cache’lemeler yapılabilir?&lt;/p&gt;

&lt;p&gt;Read’ler icin diske gitmeden de sonuç dönebilme için cache-layer. 
Cache layer = Local Cache (remote cache’e network call atmasına gerek kalmadan) + Remote Cache(Redis, ElastiCache vb.)&lt;/p&gt;

&lt;p&gt;negative cache , positive cache. cache hata bulunursa kullanıcıya hata mı dönülsün?&lt;/p&gt;

&lt;p&gt;inline cache&lt;/p&gt;

&lt;p&gt;side cache=  cache ve db aynı yerdeyse side cache mesela dax, dynamodb önündeki cache. tek bir layer gibi geliyor.&lt;/p&gt;

&lt;p&gt;Thundering herd problem: Cachede data yok, 100 request aynı anda geldi, 100’ü de aynı anda DB’ye gidecek demek. Bunun yerine cache kısmında, cache’den arka servise erişilirken lock tutulup sadece birisi DB’ye erişebilir. Böylece arkadaki servis boğulmamış olur.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;IO&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Async IO ve Non-blocking IO benzer ama detayda farklı. Async için, o thread o işi yapmak i.in baska thread’e paslıyor. Arkadaki işi paylaştığı thread’ler birbirini bekleyeebilir thread pool’da. Mesela 100 thread’lik bir pool. 101. thread pool’u bekleyecek.&lt;/p&gt;

&lt;p&gt;Non-blocking’de, beklemeden ziyade OS seviyesinde select/pool, epoll ile işlemler.&lt;/p&gt;

&lt;p&gt;Connection, elden geldiğince reuse edilmeli. keep-alive. Https için, birden fazla round trip oluyor, mesela sertikayı al gibi bir overhead. http/2, http/1 üzerine avantajlı, client’ın istemesine gerek olmadan server-push mantığı sağlıyor.&lt;/p&gt;

&lt;p&gt;İletişim protokolü uygunsa REST değil de gRPC. gRPC, default http/2 üzerinde. REST, genelde json ve xml formatında ama çok sıkıştırılmış data değil. gRPC’de data size’ı çok küçük, boylece daha az data gidip geldiği icin performanstan kazanılır.&lt;/p&gt;

&lt;p&gt;CDN kullanılmalı. DNS resolution aşamasında, CDN edge seçimi gerceklesiyor. Web sayfası icin ciddi performans sergiliyor, aksi takdirde dünyanın öbür ucuna gidip gelmesi bayağı bir network delay olur.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Redis&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Redis Pipelining: redis’e tek tek gitmek yerine batch ile gitmek. Böylece tek seferde gönderilir, rediste internal olarak tek tek işlenir.&lt;/p&gt;

&lt;p&gt;Persistent olması istenmiyorsa kapatılmalı. RDB snapshot ile, periyodik aralıklarda redisin snapshot’ı diske yazılıyor, default bu var.&lt;/p&gt;

&lt;p&gt;Disk Swap; memorydeki data diske transfer edilirse yavaslık olur, disk swap kapatılması iyi olur.&lt;/p&gt;

&lt;p&gt;Komutun complexity’sinin farkında olunmalı. O(n) gibi bir komut için milyonlara item varsa, bu komut sn’ler sürebilir. Redis’in sitesinde hangi komutun ne kadar karmaşıklıkta olduğu yazıyor.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;ElasticSearch&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Reindex’lemek. Eğer çok fazla update/delete varsa index’i yenilemek icin önemli.
Yine disk swap edilmeli. Profiling api ile, query planı görülebilir. Query hakkında nasıl çalıştığı hakkında bilgi sağlayarak bir inside verir, yani profiling ile monitoring.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Event-Driven Architecture&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Böyle tasarlanmasının faydası? API, gelen istekle datayı yazmak icin beklememiş olacak. Baska servise delege edecek. Hatta servis, batch olarak yazarak yazdığı servisi daha fazla yormamış olur. Hem de hata durumlarında daha kolay çıkılır.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Replicate&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Kendisine daha yakın storage’den alması. Data locality ve failover mekanizması.&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;Recover&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Sistemin dayanıklı olmasını sağlıyor. Periyodik olarak sistem snapshot’ı alınabilir.&lt;/p&gt;

</description>
        <pubDate>Sun, 05 Jul 2020 14:49:00 +0300</pubDate>
        <link>http://localhost:4000/2020/cloud-and-serverless-turkey-ramazan-ozel/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/cloud-and-serverless-turkey-ramazan-ozel/</guid>
        
        <category>software</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>Java Magazine April 2020 [TR]</title>
        <description>&lt;p&gt;&lt;strong&gt;CDC(Consumer-Driven Contract) Test&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Microservis mimarisi, servisler arasında bircok iletisim icerir. Zaman içerisinde servislerin ürettiği veriler değişebilir, bu da aralarında input ve output bekletilerini içeren bir contract oluşturmalarına neden olur. Contract testler ile, microservisteki bileşenlerin bu contract’ı karsıladığı doğrulanır ve input/output değişimlerinde doğrulamadaki hatalarla kırılan yerlerin düzeltilmesi sağlanır.&lt;/p&gt;

&lt;p&gt;Consumer-driven demek, contract’ın consumer tarafında başlamasından kaynaklanıyor, fakat bu contract her iki tarafta da çalışıyor.&lt;/p&gt;

&lt;p&gt;Pact, consume-driven contract desteği sağlayan bir test framework’ü. Mock/Stub Http Server ile, consumer’ın istekleri ve beklediği responselar mock’lanır, böylece gerçekten provider tarafına istek atılmaz. Consumer tarafındaki bu isteklerden pact contract file adında bir kayıt oluşturulur ve pact broker’da saklanır. Bu, contractların saklanması ve paydaşlar arasında paylaşılması için repository görevi görür. Aynı istekler, bu sefer contract içindeki diğer tarafta koşturulur. Provider, bu contract’ı çeker ve consumer tarafında mock’lanan istekleri kendi üzerinde gerçek isteklerle çalıştırır ve dönen response ile contract’daki response karşılaştırılır.&lt;/p&gt;

&lt;p&gt;Aslında yukarıdaki akışın, Spring üzerine kurulu mikroservislerde CDC testleri koşturmak için yazılmış Spring Cloud Contract kütüphanesinden farkı yok.&lt;/p&gt;

&lt;p&gt;Pact, JUnit test framework’ü ve Maven/Gradle gibi build tool’ları ile sıkı sıkıya entegrasyona sahip. Consumer tarafında testi hazırlamak için Pact extension’ı ve bir annotation yeterli. Bu extension ile, Mock Http server ayarlanır ve pact contract file oluşturulur. @Pact annotation ile de, iletişimdeki input/output expectation’lar tanımlanır.&lt;/p&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@Rule 
public PactProviderRule mockProvider = new PactProviderRule(&quot;test_provider&quot;, &quot;localhost&quot;, 8080, this);

@Pact(provider=&quot;test_provider&quot;, consumer=&quot;test_consumer&quot;)
public PactFragment createFragment(PactDslWithProvider builder) {
	return builder
   .uponReceiving(&quot;a request for something&quot;).path(&quot;/hello&quot;).method(&quot;POST&quot;).body(&quot;json&quot;)
   .willRespondWith().status(200).body(&quot;json&quot;)
   .toFragment();
   // PactDslJsonBody builder sınıfı ile, static tanımlı body&apos;ler yerine dynamic şekilde oluşurulabilir.
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;Provider tarafındaki testte contract’ları doğrulamak için JUnit testi yada maven pluginleri kullanılabilir. Maven plugin ile, pact broker url’i ile yayınlanan contract’lar çekilir, mvn pact:verify ile doğrulanır.&lt;/p&gt;

&lt;p&gt;Pact State’ler ile, consumer ve provider arasında bilgi paylaşımı sağlanır, böylece provider’da testler başlamadan önce provider’a özgü ayarlamalar yapılır. Mesela ne gibi? Veritabanında benim gönderdiğim verileri ekleyerek test işlemini bu veriler üzerinden gerçekleştir gibi.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;JUnit5&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JUnit4’den 5’e geçerken testleri yeniden düzenleyebileceğinizi düşünebilirsiniz, fakat JUnit5, JUnit4 testlerini Vintage library kullanarak çalıştırabilir. böylece eskiler üzerinde yoğunlaşmadan sadece yeni testler JUnit5 kullanılarak yazılabilir.&lt;/p&gt;

&lt;p&gt;Farklar&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;importlar org.junit yerine org.junit.jupiter.api package altında&lt;/li&gt;
  &lt;li&gt;@Test annotasyonu parametre almak yerine, özel assertions fonksiyonlara bırakıldı. mesela test sonucu beklenen hatayı belirtmek için expected property yerine assertThrows yada assertDoesNotThrow ile bu kontrol yapılacak.&lt;/li&gt;
  &lt;li&gt;annotation isimlendirmeleri değişti. mesela before ve beforeclass daha anlaşılabilir hale getirilmiş. before -&amp;gt; beforeEach, beforeClass -&amp;gt; beforeAll, ignore -&amp;gt; disabled, category -&amp;gt; tag.&lt;/li&gt;
  &lt;li&gt;assertions altındaki hata mesajları son arguman olarak geçiliyor. assertion fail olması durumunda error mesajı hazırlamak için lambda kabul edebilecekler.&lt;/li&gt;
  &lt;li&gt;assumptionlarda, condition karşılaşırsa çalışıtırılacak code lambda ile sağlanabilir hale gelebilir.&lt;/li&gt;
  &lt;li&gt;JUnit’de framework’ü yapılandırmak icin RunWith kullanarak extension’lar belirtiliyor, mesela @RunWith(SpringJUnit4ClassRunner.class). JUnit4’de her class için yalnız bir tane extension belirtilebiliyorken, daha fazlası için Rule ve ClassRule annotation’lı değişkenler tanımlamak gerekiyordu. JUnit5 ile extensionlar geliştirildi. Artık RunWith/Rule ve Classsrule yerine, ExtendWith ve RegisterExtension ile birçok extension kullanılabilir.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Yeni Eklenenler&lt;/p&gt;

&lt;ul&gt;
  &lt;li&gt;@DisplayName. sınıf ve test-case’lerden önce, amaçlarını belirtmek için kullanılır.&lt;/li&gt;
  &lt;li&gt;@Test propertylerini karşılayacak yeni assertions methodları.&lt;/li&gt;
  &lt;li&gt;@Nested ile nested test classları. böylece tek bir sınıfın farklı amaçlarla yazılan test-case’leri farklı test sınıflarında yazılmak yerine aynı nested class’ta yazılır, böylece benzer test-case’ler aynı nested class’ta gruplanmış olur.&lt;/li&gt;
  &lt;li&gt;parameterized tests. JUnit4’de bu dışarıdan sağlanan library ile vardı, fakat artık built-in destek var.
    &lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;@ParameterizedTest
@ValueSource(strings = {&quot;foo&quot;, &quot;bar&quot;}) // source tipleri; value, empty, null, enum, arguments, method, csv
public void test(String args) {}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;    &lt;/div&gt;
  &lt;/li&gt;
  &lt;li&gt;@RepeatedTests ile testi istenilen sayıda tekrar çalıştırma&lt;/li&gt;
  &lt;li&gt;conditional test execution. belirtilen koşula göre @Disabled olup olmamasını belirliyor. @EnabledOnX, @EnableIfX&lt;/li&gt;
  &lt;li&gt;test templates ve dynamic tests. detayları araştırınca ekleyeceğim.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;&lt;strong&gt;Micronaut ve SSE&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Bu iki konu üzerine bir örnek geliştirme yazısı var, bu ikisini ilk defa duydum.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;Micronaut is a modern, JVM-based, full-stack framework for building modular,  easily testable microservice and serverless applications. Micronaut has built-in support for Kafka, RabbitMQ, and two HTML5 messaging paradigms: server-sent events (SSE) and WebSocket. 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;Micronaut, Spring Boot ile karşılaştırıldığında daha hızlı ayağa kalkma (runtime yerine compile time dependency injection’dan dolayı), daha düşük memory tüketimi ve daha fazla isteğe cevap verebilme kabiliyetine sahip.&lt;/p&gt;

&lt;p&gt;SSE(Server-Sent Events), WebSocket’e benzer bir yapı. İkisi de push technology, fakat WebSocket’te bi-directional veri akışı varken, SSE’de sadece server’dan client tarafına veri akışı var.&lt;/p&gt;
</description>
        <pubDate>Sun, 19 Apr 2020 17:19:00 +0300</pubDate>
        <link>http://localhost:4000/2020/java-magazine-april-2020/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/java-magazine-april-2020/</guid>
        
        <category>programming</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>Welcome to Jekyll!</title>
        <description>&lt;p&gt;Hello, I’ve started writing here in Oct 13, 2018 by using Hugo static website creator.&lt;/p&gt;

&lt;p&gt;My motivation was to help others in some way by writing about my research about the topics that interested to me in daily life, or the problems and solutions that I have encountered in the business and that have kept me busy for a long time.&lt;/p&gt;

&lt;p&gt;Now, in coronavirus days, I got bored and decided to change the site by using Jekyll jekyll-uno theme. I will continue to write my articles with the new look.&lt;/p&gt;
</description>
        <pubDate>Sat, 21 Mar 2020 13:04:23 +0300</pubDate>
        <link>http://localhost:4000/2020/welcome-to-jekyll/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/welcome-to-jekyll/</guid>
        
        <category>software</category>
        
        
        <category>software</category>
        
      </item>
    
      <item>
        <title>Java Magazine February 2020 [TR]</title>
        <description>&lt;p&gt;&lt;strong&gt;Jakarta Neyin Nesi?&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Oracle, Java EE’yi Eclipse Foundationa transfer etmeye karar veriyor. Codebase’in büyüklüğünden dolayı 3 asamaya ayırıyorlar.&lt;/p&gt;
&lt;ul&gt;
  &lt;li&gt;Yalnızca son sürümlerin specification ve kodu alınıyor ve artık javax değil jakarta group-id altında build’ler yayınlıyorlar. Önceki sürümler maintain edilmiyor. Aslında jakarta sürümü ile javax son sürümü birbirinin aynısı.&lt;/li&gt;
  &lt;li&gt;Yeni specification process (jesp-jakarta ee specification process), yeni terimler/ürün adları tanımlanıyor. Öncesinde jcp-java community process ile, jsr-java specification requestler ile sağlanıyordu. Yeni ürünlerin ismi jakarta ile başlıyor, eski isimlerdeki api, service, architecture vs kaldırılıyor. Yeni ürünler boş specification documentler ile yayınlanıyor. Çünkü eskileri temiz hale getirmek uzun zaman alabilirdi.&lt;/li&gt;
  &lt;li&gt;Specification document’larin update edilmesi. Yeni sürüm Java 8’de olacak ama Java 11 üzerinde calısabilecek. (tck=technologicy compatibility kit) Bu önemli cunku Java geriye donuk uyumlulugu bozup J ava11’de Java 8 olan ozellikleri cıkarmıstı. Mesela Java 8’deki uygulamaların Java 11’de derlenebilmesi icin jaxb gerekiyor.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Son sürüm Java EE8 idi. Tüm bu aşamalar tamamnlanınca sürüm adı Jakarta EE9. Aslında ekstra özellik yok. Jakarta EE10, yeni özelliklerin ekleneceği ilk sürüm olacak.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Java 14 ile Gelen Ozellikler&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Scheduled for release on March 17, 2020.&lt;/p&gt;

&lt;p&gt;Java sürüm politikası için ek bilgi; Java 11’den itibaren 3 yılda bir major release(lts) cıkılacak. 6 ayda bir de minor releaseler. Sıradaki major release 2021, java 17 ile. son major release Java 11. Javada minor releaselerdeki feature’lar, sonraki sürümlerde feedback üzerine değiştirmek ve kaldırmak icin preview olarak tasarlanıyor. (preview featureları kullanabilmek icin compile time ve runtime’da enable edilmeli.&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;javac --enable-preview --release &amp;lt;number&amp;gt; x.java
java --enable-preview x.java
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Switch expressionlar kalıcı hale geldi. Java 12’de preview olarak eklenip, 13’de preview olarak geliştirilmişti.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Multiline text blocks. Java13’de preview olarak geldi ve hala oyle kalacak, geliştirmeler olacak. \s single space ve \ ile her satırın sonuna new line eklenmesinin önüne geçilir.&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Pattern matching for instanceof. Yeni preview feature. Conditional statement’ta instaceof ile işleme sokulmuş instance’ın koşulu geçerse explicit cast yapılmasının önüne geçilir. 2011’deki araştırma raporuna göre castların %24’ününün öncesinde instanceof varmış.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if (obj instanceof Group) {
  Group group = (Group) obj;
  ...
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;
&lt;p&gt;yerine&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;if(obj instanceof Group group) {
	... // artık işlemler group üzerinden
}
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;
    &lt;p&gt;Records. Yeni preview feauture. public record constructorname(…params) ile hashCode, equals, toString implementaasyonu
sağlanır. elle yazmaya gerek kalmaz. hali hazırda ide’lerle bu sağlanıyor, artık dilin kendi yapısıyla sağlanacak. mesela ilk başta ide tarafından otomatik get, hashCode, equals olusturuldu. sınıfa daha sonradan field eklenince buralar update edilmezse, izini nasıl süreceksin?&lt;/p&gt;
  &lt;/li&gt;
  &lt;li&gt;
    &lt;p&gt;Helpful NullPointerExceptions. user.getLocation().getCity().getName() gibi yapıda null hatası çıksa, nerede
çıktığını bulmak zor. 3 farklı yerde çıkabilir. Yeni JVM feeture ile daha bilgilerindirici mesaj verilecek. default’ta enabled değil, JVM flag ile kullanılmalı.&lt;/p&gt;
  &lt;/li&gt;
&lt;/ul&gt;

&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;java -XX:+ShowCodeDetailsInExceptionMessages 
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;ul&gt;
  &lt;li&gt;Java Flight Recorder, Java Mission Control&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;JFR ve JMS, JVM running applicationlar icin profiling ve monitoring technologies. JFR is event-based profiling engine for writing events in binary format. JMC is GUI tool for examining a data file created by JFR from the telemetry of single JVM.&lt;/p&gt;

&lt;p&gt;JDK11’e kadar ücretliyken open-source’a çevrildi.&lt;/p&gt;

&lt;p&gt;Java 14 ile yeni JFR feature ile, JFR sürekli olarak event’ların stream’ini üretir ve event’lerin hemen handle edilmesini sağlar.
Eski halinde profiling datanın oldugu dosya olusturulup oradan parse ediliyordu.
JFR event streaming ile, JFR event’lar meydana geldiğinde callback alınır ve hemen cevap verilir. &lt;strong&gt;java agent için güzel bir use-case.&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;JFR recordingi enable icin&lt;/p&gt;
&lt;div class=&quot;language-plaintext highlighter-rouge&quot;&gt;&lt;div class=&quot;highlight&quot;&gt;&lt;pre class=&quot;highlight&quot;&gt;&lt;code&gt;-XX:StartFlightRecording:&amp;lt;options&amp;gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;&lt;/div&gt;

&lt;p&gt;jpc-profiling configuration dosyalarıyla hangi metricler toplanacak belirlenir. ya da optionsa hangi data, ne kadar süre saklanacak ve hangi dosyada saklanacak belirlenir. Başlatırken ayarlamaya gerek yok, çalışan program üzerinden de “jcmd” ile aktive edilebilir.&lt;/p&gt;

&lt;p&gt;&lt;strong&gt;Disclaimer&lt;/strong&gt;&lt;/p&gt;

&lt;p&gt;Yukarıdaki tüm bilgiler Java Magazin’in Şubat 2020 sayısını okurken kendime özet olması ve gelecekte hatırlamam için çıkardığım/yorumladığım ve türkçeye çevirdiğim bilgilerdir. Orjinal yazılar için &lt;a href=&quot;https://blogs.oracle.com/javamagazine/?source=:em:nw:mt::RC_WWMK190726P00001:NSL400037924&amp;amp;elq_mid=157128&amp;amp;sh=2320221411180624101924012335&amp;amp;cmid=WWMK190726P00001C0007&quot;&gt;adresi&lt;/a&gt; ziyaret edebilirsiniz.&lt;/p&gt;

&lt;p&gt;Tüm özellikleri denedikçe ekstra bilgiler eklemeye çalışacağım.&lt;/p&gt;

</description>
        <pubDate>Sun, 08 Mar 2020 18:04:23 +0300</pubDate>
        <link>http://localhost:4000/2020/java-magazine-february-2020/</link>
        <guid isPermaLink="true">http://localhost:4000/2020/java-magazine-february-2020/</guid>
        
        <category>programming</category>
        
        
        <category>programming</category>
        
      </item>
    
      <item>
        <title>WSL (Windows Subsystem for Linux)</title>
        <description>&lt;p&gt;I have become aware of the existence of a program called WSL (Windows Subsystem for Linux) in recent moths by suggestion of colleague.&lt;/p&gt;

&lt;p&gt;There is no installation required, just enable it from ‘Control Panel -&amp;gt; Programs -&amp;gt; Turn Windows features on or off’.&lt;/p&gt;

&lt;p&gt;It is simple/lightweight linux and designed to run simple linux commands and programs at windows. Why? Because it’s not an emulator. The emulator is called running one environment/operating system in another one. This is basically converter and converts linux/windows system calls to each other. For example, for a linux program, firstly linux system calls are converted windows system calls. Then, windows kernel response is converted linux kernel response. The program acts as it were running on the linux kernel. But, there are some limitations as you can image. The whole linux system calls must be implemented as windows system calls. You can’t use for complex programs which require heavy workload.&lt;/p&gt;

&lt;p&gt;Nevertheless, it helps me in some cases. For example, I used redis (only works on linux) last weeks without virtual machine or docker.&lt;/p&gt;
</description>
        <pubDate>Mon, 05 Aug 2019 18:04:23 +0300</pubDate>
        <link>http://localhost:4000/2019/windows-subsystem-for-linux/</link>
        <guid isPermaLink="true">http://localhost:4000/2019/windows-subsystem-for-linux/</guid>
        
        <category>software</category>
        
        
        <category>software</category>
        
      </item>
    
  </channel>
</rss>
